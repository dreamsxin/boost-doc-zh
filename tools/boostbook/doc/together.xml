<?xml version="1.0" encoding="utf-8"?>
<!--
   Copyright (c) 2002 Douglas Gregor <doug.gregor -at- gmail.com>
  
   Distributed under the Boost Software License, Version 1.0.
   (See accompanying file LICENSE_1_0.txt or copy at
   http://www.boost.org/LICENSE_1_0.txt)
  -->
<!DOCTYPE chapter PUBLIC "-//Boost//DTD BoostBook XML V1.0//EN"
  "http://www.boost.org/tools/boostbook/dtd/boostbook.dtd">
<chapter xmlns:xi="http://www.w3.org/2001/XInclude" id="boostbook.together"
         last-revision="$Date: 2009-04-15 03:37:45 -0400 (Wed, 15 Apr 2009) $">
  <title>Bringing Together a BoostBook Document 集合成一个 BoostBook 文档</title>

  <section id="boostbook.linking">
    <title>Linking in BoostBook 在 BoostBook 中的链接</title> 

    <para>How one links to another element in BoostBook depends
    greatly on the nature of the element linked and how the link
    should appear. There are three general linking elements:
    &lt;xref&gt;, &lt;link&gt;, and &lt;ulink&gt;. Additionally, there
    are linking elements for referencing specific types of entities,
    such as classes (&lt;classname&gt;), functions
    (&lt;functionname&gt;), or libraries (&lt;libraryname&gt;).<sbr/>
    如何链接到 BoostBook 中的其它元素，这非常取决于被链接元素的本身特性和该链接如何出现。
    有三种常用的链接元素：&lt;xref&gt;, &lt;link&gt; 和 &lt;ulink&gt;。
    另外，还有引向特定实体类型的链接元素，如类(&lt;classname&gt;), 函数(&lt;functionname&gt;) 
    或库(&lt;libraryname&gt;)。</para>

    <para>The &lt;xref&gt; element references elements that have an
    <code>id</code> attribute and a title. The actual link text is
    composed from title and type of the element referenced. To link to
    a particular ID, create an &lt;xref&gt; element with the
    <code>linkend</code> attribute set to the ID of the intended
    target. For instance, this section's ID is
    <code>boostbook.linking</code>, so we create a reference it to
    with <code>&lt;xref linkend="boostbook.linking"/&gt;</code>, which
    will look like this in the text: <xref
    linkend="boostbook.linking"/>.<sbr/>
    &lt;xref&gt; 元素引用带有 <code>id</code> 属性和标题的元素。实际的链接文本由被引用元素的标题和类型组成。
    要链接到一个特定的 ID，请创建一个 &lt;xref&gt; 元素，带有 <code>linkend</code> 属性并设为指定目标的 ID。
    例如，本节的 ID 是 <code>boostbook.linking</code>，所以我们用 <code>&lt;xref linkend="boostbook.linking"/&gt;</code> 
    来创建一个引用引向本节，在文本中它看起来如下：<code>&lt;xref linkend="boostbook.linking"/&gt;</code>.</para>

    <para>The &lt;link&gt; element references an ID in the same way as
    &lt;xref&gt;, except that &lt;link&gt; does not generate any text
    for the link, so text must be supplied within the element. For
    instance, we can again link to this chapter but this time specify
    our own text with <code>&lt;link
    linkend="boostbook.linking"&gt;like this&lt;/link&gt;</code>. This
    markup will result in a link to this chapter that looks <link
    linkend="boostbook.linking">like this</link>.<sbr/>
    &lt;link&gt; 元素以和 &lt;xref&gt; 一样的方式引用一个 ID，不过 &lt;link&gt; 不生成任何文本，所以文本必须在元素内部提供。
    例如，我们可以再一次链接到本节，不过这次我们通过 <code>&lt;link
    linkend="boostbook.linking"&gt;like this&lt;/link&gt;</code> 来指定自己的文本。
    这个标记将生成一个到本节的链接，看起来如：<link linkend="boostbook.linking">like this</link>。</para>

    <para>The &lt;ulink&gt; element references a URL that is outside
    of the DocBook document. The <code>url</code> attribute contains
    the URL to link to, and the element data provides the link
    text.For instance, we can link to the the Boost web site with
    <code>&lt;ulink
    url="http://www.boost.org"&gt;Boost&lt;/ulink&gt;,</code> which
    appears in the document like this: <ulink
    url="http://www.boost.org">Boost</ulink>.<sbr/>
    &lt;ulink&gt; 元素引用一个在 DocBook 文档之外的 URL。其 <code>url</code> 属性包含链至的 URL，且元素数据提供链接文本。
    例如，我们可以通过 <code>&lt;ulink url="http://www.boost.org"&gt;Boost&lt;/ulink&gt;,</code> 
    链接到 Boost 网站，在文档中会出现：<ulink
    url="http://www.boost.org">Boost</ulink>。
</para>
    
    <para>In BoostBook, &lt;ulink&gt; supports a custom url schema for
    linking to files within the boost distribution. This is formed by
    setting the <code>url</code> attribute to <code>boost:</code>
    followed by the file's path. For example, we can link to the
    flyweight library with
    <code>&lt;ulink
    url="boost:/libs/flyweight/index.html"&gt;Boost.Flyweight&lt;/ulink&gt;</code>,
    which will appear like this: <ulink
    url="boost:/libs/flyweight/index.html">Boost.Flyweight</ulink>.
    This schema is only supported for BoostBook &lt;ulink&gt; elements.
    It isn't available for any other elements or in Docbook.<sbr/>
    在 BoostBook 中，&lt;ulink&gt; 支持定制的 url 架构，以链接至 boost 分发包内部的文件。
    这是通过将 <code>url</code> 属性设置为 <code>boost:</code> 并后随文件路径来实现的。
    例如，我们可以将 flyweight 库以 <code>&lt;ulink url="boost:/libs/flyweight/index.html"&gt;Boost.Flyweight&lt;/ulink&gt;</code> 
    来链接，它将显示为：<ulink url="boost:/libs/flyweight/index.html">Boost.Flyweight</ulink>。
    这种架构只支持 BoostBook &lt;ulink&gt; 元素。对于其它元素或是在 Docbook 内是不可用的。
</para>

    <para>The &lt;classname&gt;, &lt;functionname&gt;,
    &lt;methodname&gt;, and &lt;libraryname&gt; link to classes,
    functions, methods, and libraries, respectively. The text of each
    element gives both the name of the element to link to and the link
    text. For instance, we can link to the Function library with
    <code>&lt;libraryname&gt;Function&lt;/libraryname&gt;</code>,
    which results in the following:
    <libraryname>Function</libraryname>. In cases where the displayed
    text is different from the actual name, the <code>alt</code>
    attribute can be specified. For instance, the following XML
    element references the <classname>boost::function</classname>
    class template but displays the text <classname
    alt="boost::function">function</classname>: <code>&lt;classname
    alt="boost::function"&gt;function&lt;/classname&gt;</code>.<sbr/>
    &lt;classname&gt;, &lt;functionname&gt;,
    &lt;methodname&gt; 和 &lt;libraryname&gt; 分别链接至类、函数、方法和库。
    每个元素的文本同时给出链至元素的名字和链接文本。
    例如，我们可以通过 <code>&lt;libraryname&gt;Function&lt;/libraryname&gt;</code> 链接至 
    Function 库，这将生成：<libraryname>Function</libraryname>。
    如果要显示不同于实际名字的文本，则要指定 <code>alt</code> 属性。
    例如，以下 XML 元素引用 <classname>boost::function</classname> 类模板，但显示文本 
    <classname alt="boost::function">function</classname>: <code>&lt;classname
    alt="boost::function"&gt;function&lt;/classname&gt;</code>.
</para>
  </section>
</chapter>
