[/ 
  Copyright 2006-2007 John Maddock.
  Distributed under the Boost Software License, Version 1.0.
  (See accompanying file LICENSE_1_0.txt or copy at
  http://www.boost.org/LICENSE_1_0.txt).
]


[section:boost_format_syntax Boost-Extended Format String Syntax  Boost扩展格式化串语法]

Boost-Extended format strings treat all characters as literals except for 
'$', '\\', '(', ')', '?', and ':'.\n
Boost扩展格式化字符串将'$'、'\\'、'('、')'、'?'和':'特殊对待。

[h4 Grouping 分组]

The characters '(' and ')' perform lexical grouping, so use \\( and \\) if you 
want a to output literal parenthesis.\n
字符'('和')'实现字面分组，使用\\(和\\)来输出字面的括号。

[h4 Conditionals 条件]

The character '?' begins a conditional expression, the general form is:\n
字符'?'开始一个条件表达式，通用格式为：

?Ntrue-expression:false-expression

where N is decimal digit.\n
其中N为数字。

If sub-expression N was matched, then true-expression is evaluated and sent to 
output, otherwise false-expression is evaluated and sent to output.\n
如果子表达式N被匹配，那么true-expression被求值并送到输出，否则false-expression被求值并送到输出。

You will normally need to surround a conditional-expression with parenthesis in 
order to prevent ambiguities.\n
通常都需要将条件表达式用括号围绕起来，以防止二义性。

For example, the format string "(?1foo:bar)" will replace each match found with "foo" if
the sub-expression $1 was matched, and with "bar" otherwise.\n
例如，格式化字符串"(?1foo:bar)"，如果子表达式$1匹配了，会将每个匹配替换为"foo"，否则为"bar"。

For sub-expressions with an index greater than 9, or for access to named sub-expressions use:\n
对于索引数大于9的子表达式，或要访问命名的子表达式，使用：

?{INDEX}true-expression:false-expression

or\n
或者

?{NAME}true-expression:false-expression


[h4 Placeholder Sequences 占位符序列]

Placeholder sequences specify that some part of what matched the regular expression 
should be sent to output as follows:\n
占位符序列指明了正则表达式匹配的哪部分将被输出：

[table
[[Placeholder 占位符][Meaning 意义]]
[[$&][Outputs what matched the whole expression.\n
输出整个表达式的匹配。]]
[[$MATCH][As $&]]
[[${^MATCH}][As $&]]
[[$\`][Outputs the text between the end of the last match found (or the 
      start of the text if no previous match was found), and the start 
      of the current match.\n
      输出从前一个匹配的终点(如果没有前一次匹配则为文本的开始)，到当前匹配开始处之间的文本。]]
[[$PREMATCH][As $\`]]
[[${^PREMATCH}][As $\`]]
[[$'][Outputs all the text following the end of the current match.\n
输出当前匹配终点之后的所有文本。]]
[[$POSTMATCH][As $']]
[[${^POSTMATCH}][As $']]
[[$+][Outputs what matched the last marked sub-expression in the regular expression.\n
输出与正则表达式中最后一个被标记的子表达式相匹配的文本。]]
[[$LAST_PAREN_MATCH][As $+]]
[[$LAST_SUBMATCH_RESULT][Outputs what matched the last sub-expression to be actually matched.\n
输出被实际匹配的最后子表达式的结果。]]
[[$^N][As $LAST_SUBMATCH_RESULT]]
[[$$][Outputs a literal '$'\n
输出字面符号'$' ]]
[[$n][Outputs what matched the n'th sub-expression.\n
输出第n个子表达式的匹配。]]
[[${n}][Outputs what matched the n'th sub-expression.\n
输出第n个子表达式的匹配。]]
[[$+{NAME}][Outputs whatever matched the sub-expression named "NAME".\n
输出名为"NAME"的子表达式的匹配。]]
]

Any $-placeholder sequence not listed above, results in '$' being treated as a literal.\n
任何不在上面列出的$-占位符序列，都将导致'$'被作为字面符号。

[h4 Escape Sequences 转义序列]

An escape character followed by any character x, outputs that character unless 
x is one of the escape sequences shown below.\n
一个转义符号后跟字符x，除非x是下面的转义序列之一，则输出字符x。

[table
[[Escape 转义序列][Meaning 意义]]
[[\\a][Outputs the bell character: '\\a'.\n
输出铃响字符：'\\a'。]]
[[\\e][Outputs the ANSI escape character (code point 27).\n
输出ANSI转义字符(码点为27)。]]
[[\\f][Outputs a form feed character: '\\f'\n
输出换页字符：'\\f'。]]
[[\\n][Outputs a newline character: '\\n'.\n
输出换行字符：'\\n'。]]
[[\\r][Outputs a carriage return character: '\\r'.\n
输出回车字符：'\\r'。]]
[[\\t][Outputs a tab character: '\\t'.\n
输出制表符：'\\t'。]]
[[\\v][Outputs a vertical tab character: '\\v'.\n
输出垂直制表符：'\\v'。]]
[[\\xDD][Outputs the character whose hexadecimal code point is 0xDD\n
输出码点为0xDD的十六进制字符]]
[[\\x{DDDD}][Outputs the character whose hexadecimal code point is 0xDDDDD\n
输出码点为0xDDDD的十六进制字符]]
[[\\cX][Outputs the ANSI escape sequence "escape-X".\n
输出ANSI转义序列"escape-X"。]]
[[\\D][If D is a decimal digit in the range 1-9, then outputs the text that matched sub-expression D.\n
如果D是1-9范围内的数字，则输出子表达式D匹配的文本。]]
[[\\l][Causes the next character to be outputted, to be output in lower case.\n
使下一个被输出的字符输出为小写。]]
[[\\u][Causes the next character to be outputted, to be output in upper case.\n
使下一个被输出的字符输出为大写。]]
[[\\L][Causes all subsequent characters to be output in lower case, until a \\E is found.\n
使后面所有的字符都输出为小写，直到碰到\E。]]
[[\\U][Causes all subsequent characters to be output in upper case, until a \\E is found.\n
使后面所有的字符都输出为大写，直到碰到\E。]]
[[\\E][Terminates a \\L or \\U sequence.\n
结束\L或\U的序列。]]
]

[endsect]


