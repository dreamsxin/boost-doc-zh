[/ 
  Copyright 2006-2007 John Maddock.
  Distributed under the Boost Software License, Version 1.0.
  (See accompanying file LICENSE_1_0.txt or copy at
  http://www.boost.org/LICENSE_1_0.txt).
]


[section:perl_format Perl Format String Syntax  Perl格式化串语法]

Perl-style format strings treat all characters as literals except 
'$' and '\\' which start placeholder and escape sequences respectively.\n
Perl风格格式化字符串将所有字符当作字面符号，除了'$'和'\\'，分别为占位符和转义序列的开始。

Placeholder sequences specify that some part of what matched the regular expression 
should be sent to output as follows:\n
占位符序列指明了正则表达式匹配的哪部分被送到输出中：

[table
[[Placeholder 占位符][Meaning 意义]]
[[$&][Outputs what matched the whole expression.\n
输出整个表达式的匹配。]]
[[$MATCH][As $&]]
[[${^MATCH}][As $&]]
[[$\`][Outputs the text between the end of the last match found (or the 
      start of the text if no previous match was found), and the start 
      of the current match.\n
      输出上次匹配结束(如果没有上次匹配则为文本的开始)，到当前匹配开始之间的文本。]]
[[$PREMATCH][As $\`]]
[[${^PREMATCH}][As $\`]]
[[$'][Outputs all the text following the end of the current match.\n
输出当前匹配结束之后的所有文本。]]
[[$POSTMATCH][As $']]
[[${^POSTMATCH}][As $']]
[[$+][Outputs what matched the last marked sub-expression in the regular expression.\n
输出与正则表达式最后一个被标记子表达式的匹配。]]
[[$LAST_PAREN_MATCH][As $+]]
[[$LAST_SUBMATCH_RESULT][Outputs what matched the last sub-expression to be actually matched.\n
输出实际匹配的最后一个子表达式的匹配。]]
[[$^N][As $LAST_SUBMATCH_RESULT]]
[[$$][Outputs a literal '$'\n
输出字面字符'$']]
[[$n][Outputs what matched the n'th sub-expression.\n
输出第n个子表达式的匹配。]]
[[${n}][Outputs what matched the n'th sub-expression.\n
输出第n个子表达式的匹配。]]
[[$+{NAME}][Outputs whatever matched the sub-expression named "NAME".\n
输出名为"NAME"的子表达式的匹配。]]
]

Any $-placeholder sequence not listed above, results in '$' being treated 
as a literal.\n
任何不在上面列出的$-占位符序列，将'$'当作字面符号。

An escape character followed by any character x, outputs that character unless 
x is one of the escape sequences shown below.\n
一个转义字符后跟任意字符x，如果x不是下面列出的转义序列之一，则输出字符x。


[table
[[Escape 转义序列][Meaning 意义]]
[[\\a][Outputs the bell character: '\\a'.\n
输出铃响字符：'\\a'。]]
[[\\e][Outputs the ANSI escape character (code point 27).\n
输出ANSI转义字符(码点为27)。]]
[[\\f][Outputs a form feed character: '\\f'\n
输出换页字符：'\\f'。]]
[[\\n][Outputs a newline character: '\\n'.\n
输出换行字符：'\\n'。]]
[[\\r][Outputs a carriage return character: '\\r'.\n
输出回车字符：'\\r'。]]
[[\\t][Outputs a tab character: '\\t'.\n
输出制表符：'\\t'。]]
[[\\v][Outputs a vertical tab character: '\\v'.\n
输出垂直制表符：'\\v'。]]
[[\\xDD][Outputs the character whose hexadecimal code point is 0xDD\n
输出码点为0xDD的十六进制字符]]
[[\\x{DDDD}][Outputs the character whose hexadecimal code point is 0xDDDDD\n
输出码点为0xDDDD的十六进制字符]]
[[\\cX][Outputs the ANSI escape sequence "escape-X".\n
输出ANSI转义序列"escape-X"。]]
[[\\D][If D is a decimal digit in the range 1-9, then outputs the text that matched sub-expression D.\n
如果D是1-9范围内的数字，则输出子表达式D匹配的文本。]]
[[\\l][Causes the next character to be outputted, to be output in lower case.\n
使下一个被输出的字符输出为小写。]]
[[\\u][Causes the next character to be outputted, to be output in upper case.\n
使下一个被输出的字符输出为大写。]]
[[\\L][Causes all subsequent characters to be output in lower case, until a \\E is found.\n
使后面所有的字符都输出为小写，直到碰到\E。]]
[[\\U][Causes all subsequent characters to be output in upper case, until a \\E is found.\n
使后面所有的字符都输出为大写，直到碰到\E。]]
[[\\E][Terminates a \\L or \\U sequence.\n
结束\L或\U的序列。]]
]

[endsect]


