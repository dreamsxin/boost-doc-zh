[/ 
  Copyright 2006-2007 John Maddock.
  Distributed under the Boost Software License, Version 1.0.
  (See accompanying file LICENSE_1_0.txt or copy at
  http://www.boost.org/LICENSE_1_0.txt).
]


[section:regex_format regex_format (Deprecated)]

The algorithm `regex_format` is deprecated; new code should use 
[match_results_format] instead.  Existing code will continue to compile, 
the following documentation is taken from the previous version of Boost.Regex and 
will not be further updated:\n
算法 `regex_format` 已被废弃；新代码应当使用 [match_results_format] 替换。
已存的代码仍可以编译，下面的文档从 Boost.Regex 之前的版本中取出，并不会再更新：

[h4 Algorithm regex_format  算法regex_format]

   #include <boost/regex.hpp>

The algorithm `regex_format` takes the results of a match and creates a 
new string based upon a format string, `regex_format` can be used for 
search and replace operations:\n
算法 `regex_format` 接受匹配结果作为参数并根据格式化字符串创建新的字符串，`regex_format` 可用于搜索和替换操作：

   template <class OutputIterator, class iterator, class Allocator, class Formatter>
   OutputIterator regex_format(OutputIterator out,
                              const match_results<iterator, Allocator>& m,
                              Formatter fmt,
                              match_flag_type flags = 0);

The library also defines the following convenience variation of 
`regex_format`, which returns the result directly as a string, rather 
than outputting to an iterator.\n
库中同样定义了 `regex_format` 易于使用的不同版本，返回的结果直接是字符串，而不是输出到迭代器中。

[note This version may not be available, or may be available in a more limited 
form, depending upon your compilers capabilities\n
这个版本可能不能用，或者只有很受限的形式可用，这取决于你的编译器能力]

   template <class iterator, class Allocator, class Formatter>
   std::basic_string<charT> regex_format
                                    (const match_results<iterator, Allocator>& m, 
                                    Formatter fmt,
                                    match_flag_type flags = 0);

Parameters to the main version of the function are passed as follows:\n
函数主版本的参数介绍如下：

[table
[[Parameter 参数][Description 说明]]
[[`OutputIterator out`][An output iterator type, the output string is sent to this iterator. Typically this would be a std::ostream_iterator. 	 \n
输出迭代器类型，输出字符串被送到这个迭代器中。典型情况下这是 std::ostream_iterator。]]
[[`const match_results<iterator, Allocator>& m`][An instance of [match_results] obtained from one of the matching algorithms above, and denoting what matched. 	 \n
从某个匹配算法得到的 [match_results] 实例，指示匹配的结果。]]
[[`Formatter fmt`][Either a format string that determines how the match is transformed into the new string, or a functor that computes the new string from /m/ - see [match_results_format]. 	 \n
要么是一个格式化字符串，用于决定匹配如何被转换到新的字符串，要么是一个仿函数，用于从 /m/ 计算得到新的字符串 - 参见 [match_results_format]。]]
[[`unsigned flags`][Optional flags which describe how the format string is to be interpreted. 	 \n
可选的标签，用于指示格式化字符被如何解释。]]
]

Format flags are described under [match_flag_type].\n
格式化标签在 [match_flag_type] 中说明。

The format string syntax (and available options) is described more fully 
under [link boost_regex.format format strings].\n
格式化字符串语法 (包括可用的选项) 在 [link boost_regex.format 格式化字符串] 中详细说明。

[endsect]

