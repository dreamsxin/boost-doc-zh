<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE library PUBLIC "-//Boost//DTD BoostBook XML V1.0//EN"
"../../../tools/boostbook/dtd/boostbook.dtd">

<!-- Copyright (c) 2001-2005 CrystalClear Software, Inc.
     Subject to the Boost Software License, Version 1.0.
     (See accompanying file LICENSE_1_0.txt or  http://www.boost.org/LICENSE_1_0.txt)
-->

<section id="date_time.local_time.time_zone_base">
  <title>Time Zone (abstract) 时区(抽象)</title>

  <link linkend="time_zone_base_intro">Introduction 简介</link> --
  <link linkend="time_zone_base_header">Header 头文件</link> --
  <link linkend="time_zone_base_constr">Construction 构造</link> --
  <link linkend="time_zone_base_accessors">Accessors 访问器</link>

  <anchor id="time_zone_base_intro" />
  <bridgehead renderas="sect3">Introduction 简介</bridgehead>
  <para>
    The time_zone_base class is an abstract base class template for representing time zones. Time zones are a set of data and rules that provide information about a time zone. The date_time library handles time_zones by means of a boost::shared_ptr&lt;time_zone_base&gt;. A user's custom time zone class will work in the date_time library by means of this shared_ptr.<sbr/>
    time_zone_base 类是一个表示时区的抽象基类模板。时间是一组数据和规则，它提供了关于时区的信息。
    date_time 库用一个 boost::shared_ptr&lt;time_zone_base&gt; 来处理 time_zones. 
    要在 date_time 库中使用的定制时区类要使用这个 shared_ptr. 
  </para>
  <para>
    For convienience, the time_zone_base class is typedef'd as time_zone. All references in the documentation to time_zone, are referring to this typedef.<sbr/>
    为方便使用，time_zone_base 类被 typedef 为 time_zone. 本文档中的所有对 time_zone 引用均表示这个 typedef. 
  </para>

  <anchor id="time_zone_base_header" />
  <bridgehead renderas="sect3">Header 头文件</bridgehead>
  <para>
    The time_zone_base class is defined in the header:<sbr/>
    time_zone_base 类定义在头文件：
    <programlisting>#include "boost/date_time/time_zone_base.hpp"
    </programlisting>
  </para>

  <anchor id="time_zone_base_constr" />
  <bridgehead renderas="sect3">Construction 构造</bridgehead>
  <para>
    A default constructor is provided in the time_zone_base class. There are no private data members in this base class to initialize.<sbr/>
    在 time_zone_base 类中提供了一个缺省构造函数。在该基类中没有私有数据成员需要初始化。
  </para>
  <para>
    Template parameters are time_type (typically posix_time::ptime) and CharT (defaults to char).<sbr/>
    模板参数为 time_type (如 posix_time::ptime) 和 CharT (缺省为 char)。
  </para>

  <anchor id="time_zone_base_accessors" />
  <bridgehead renderas="sect3">Accessors 访问器</bridgehead>
  <para>
    All of the accessors listed here are pure virtual functions.<sbr/>
    下表所列的所有访问器均为纯虚拟函数。
  </para>
  <para>
    <informaltable frame="all">
      <tgroup cols="2">
        <thead>
          <row>
            <entry>Syntax 语法</entry>
            <entry>Description 说明</entry>
          </row>
        </thead>
        <tbody>
          <row>
            <entry valign="top"><screen>
string_type dst_zone_abbrev();</screen></entry>
            <entry>Returns the daylight savings abbreviation for the represented time zone.<sbr/>
            返回被表示时区的夏令时缩写。</entry>
          </row>
          <row>
            <entry valign="top"><screen>
string_type std_zone_abbrev();</screen></entry>
            <entry>Returns the standard abbreviation for the represented time zone.<sbr/>
            返回被表示时区的标准缩写。</entry>
          </row>
          <row>
            <entry valign="top"><screen>
string_type dst_zone_name();</screen></entry>
            <entry>Returns the daylight savings name for the represented time zone.<sbr/>
            返回被表示时区的夏令时名字。</entry>
          </row>
          <row>
            <entry valign="top"><screen>
string_type std_zone_name();</screen></entry>
            <entry>Returns the standard name for the represented time zone.<sbr/>
            返回被表示时区的标准名字。</entry>
          </row>
          <row>
            <entry valign="top"><screen>bool has_dst();</screen></entry>
            <entry>Returns true if this time zone does not make a daylight savings shift.<sbr/>
            返回 true 如果该时区没有夏令时偏移。</entry>
          </row>
          <row>
            <entry valign="top"><screen>
time_type dst_local_start_time(year_type);</screen></entry>
            <entry>The date and time daylight savings time begins in given year.<sbr/>
            给定年份的夏令时开始日期和时间。</entry>
          </row>
          <row>
            <entry valign="top"><screen>
time_type dst_local_end_time(year_type);</screen></entry>
            <entry valign="top">The date and time daylight savings time ends in given year.<sbr/>
            给定年份的夏令时结束日期和时间。</entry>
          </row>
          <row>
            <entry valign="top"><screen>
time_duration_type base_utc_offset();</screen></entry>
            <entry>The amount of time offset from UTC (typically in hours).<sbr/>
            距UTC的时间偏移量(通常为小时数).</entry>
          </row>
          <row>
            <entry valign="top"><screen>
time_duration_type dst_offset();</screen></entry>
            <entry>The amount of time shifted during daylight savings.<sbr/>
            夏令时的时间偏移量。</entry>
          </row>
          <row>
            <entry valign="top"><screen>
std::string to_posix_string();</screen></entry>
            <entry>Returns a posix time zone string representation of this time_zone_base object. For a detailed description of a posix time zone string see <link linkend="date_time.local_time.posix_time_zone">posix_time_zone</link>.<sbr/>
            返回表示该 time_zone_base 对象的 posix 时区字符串。有关 posix 时区字符串的详细说明请见 
            <link linkend="date_time.local_time.posix_time_zone">posix_time_zone</link>.</entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable>
  </para>

</section>
