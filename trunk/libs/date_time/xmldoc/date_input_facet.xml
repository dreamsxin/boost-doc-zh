<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE library PUBLIC "-//Boost//DTD BoostBook XML V1.0//EN"
"../../../tools/boostbook/dtd/boostbook.dtd">

<!-- Copyright (c) 2005 CrystalClear Software, Inc.
     Subject to the Boost Software License, Version 1.0.
     (See accompanying file LICENSE_1_0.txt or  http://www.boost.org/LICENSE_1_0.txt)
-->

<section id="date_time.date_input_facet">
  <title>Date Input Facet 日期输入Facet</title>

  <link linkend="date_input_facet_intro">Introduction 简介</link> -
  <link linkend="date_input_facet_constr">Construction 构造</link> -
  <link linkend="date_input_facet_accessors">Accessors 访问器</link>

  <anchor id="date_input_facet_intro" />
  <bridgehead renderas="sect3">Introduction 简介</bridgehead>
  <para>The <code>boost::date_time::date_input_facet</code> enables users to have significant control how dates (and other gregorian objects) are streamed in. The date_input_facet is typedef'd in the <code>gregorian</code> namespace as <code>date_input_facet</code> and <code>wdate_input_facet</code>. <sbr/>
  <code>boost::date_time::date_input_facet</code> 让用户可以控制如果从流中输入 dates (以及其它格里历对象)。
  date_input_facet 被 typedef 为 <code>gregorian</code> 名字空间中的 <code>date_input_facet</code> 和
  <code>wdate_input_facet</code>. 
  </para>

  <anchor id="date_input_facet_constr" />
  <bridgehead renderas="sect3">Construction 构造</bridgehead>
  <para>
    <informaltable frame="all">
      <tgroup cols="2">
        <thead>
          <row>
            <entry>Syntax 语法</entry>
            <entry>Description 说明</entry>
          </row>
        </thead>
        <tbody>
          <row>
            <entry valign="top"><screen>date_input_facet()</screen></entry>
            <entry>Default constructor<sbr/>
            缺省构造函数。</entry>
          </row>
          <row>
            <entry valign="top"><screen>date_input_facet(string_type format)</screen></entry>
            <entry>Format given will be used for date input. All other formats will use their defaults.<sbr/>
            给定的 Format 将被用于 date 的输入。所有其它格式使用缺省值。</entry>
          </row>
          <row>
            <entry valign="top"><screen>date_input_facet(...)
  Parameters:
    string_type format
    format_date_parser_type
    special_values_parser_type
    period_parser_type
    date_gen_parser_type</screen></entry>
            <entry>Format given will be used for date input. The remaining parameters are parser objects. Further details on these objects can be found <link linkend="date_time.io_objects">here</link>.<sbr/>
            给定的 Format 将被用于 date 的输入。其它参数为分析器对象。有关这些对象的更多细节请见 
            <link linkend="date_time.io_objects">这里</link>。</entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable>
  </para>

  <anchor id="date_input_facet_accessors" />
  <bridgehead renderas="sect3">Accessors 访问器</bridgehead>
  <para>
    <informaltable frame="all">
      <tgroup cols="2">
        <thead>
          <row>
            <entry valign="top" morerows="1">Syntax 语法</entry>
            <entry>Description 说明</entry>
          </row>
          <row>
              <entry>Example 例子</entry>
          </row>
        </thead>
        <tbody>
          <row>
            <entry valign="top" morerows="1"><screen>void format(char_type*)</screen></entry>
            <entry>Set the format for dates.<sbr/>
            设置日期的格式。</entry>
          </row>
          <row>
            <entry><screen>date_input_facet* f = 
    new date_input_facet();
f->format("%m %d %Y");</screen></entry>
          </row>

          <row>
            <entry valign="top" morerows="1"><screen>void set_iso_format()</screen></entry>
            <entry>Sets the date format to ISO<sbr/>
            设置日期格式为 ISO</entry>
          </row>
          <row>
            <entry><screen>f->set_iso_format();
// "%Y%m%d"</screen></entry>
          </row>

          <row>
            <entry valign="top" morerows="1"><screen>void set_iso_extended_format()</screen></entry>
            <entry>Sets the date format to ISO Extended<sbr/>
            设置日期格式为 ISO 扩展</entry>
          </row>
          <row>
            <entry><screen>f->set_iso_extended_format();
// "%Y-%m-%d"</screen></entry>
          </row>

          <row>
            <entry valign="top" morerows="1"><screen>void month_format(char_type*)</screen></entry>
            <entry>Set the format when 'get'ing months individually.<sbr/>
            单独设置月份的输入格式。</entry>
          </row>
          <row>
            <entry><screen>f->month_format("%B");
ss.str("March");
ss >> m; // March</screen></entry>
          </row>

          <row>
            <entry valign="top" morerows="1"><screen>void weekday_format(char_type*)</screen></entry>
            <entry>Set the format when 'get'ing weekdays individually.<sbr/>
            单独设置周日的输入格式。</entry>
          </row>
          <row>
            <entry><screen>f->weekday_format("%a");
ss.str("Sun");
ss >> wd; // Sunday</screen></entry>
          </row>

          <row>
            <entry valign="top" morerows="1"><screen>void year_format(char_type*)</screen></entry>
            <entry>Set the format when 'get'ing years individually.<sbr/>
            单独设置年份的格式。</entry>
          </row>
          <row>
            <entry><screen>f->weekday_format("%y");
ss.str("04");
ss >> year; // 2004</screen></entry>
          </row>

          <row>
            <entry valign="top" morerows="1"><screen>void period_parser(...)
  Parameter:
    period_parser_type</screen></entry>
            <entry>Replaces the period parser object with a user created one.<sbr/>
            将 period 分析器对象替换为用户创建的对象。</entry>
          </row>
          <row>
            <entry>see the <link linkend="date_time.io_tutorial">tutorial</link> for a complete example.<sbr/>
            完整的例子请见 <link linkend="date_time.io_tutorial">指南</link>。</entry>
          </row>

          <row>
            <entry valign="top" morerows="1"><screen>void special_values_parser(...)
  Parameter:
    special_values_parser_type</screen></entry>
            <entry>Replaces the special_values parser object with a user created one.<sbr/>
            将 special_values 分析器替换为用户创建的对象。</entry>
          </row>
          <row>
            <entry>see the <link linkend="date_time.io_tutorial">tutorial</link> for a complete example.<sbr/>
            完整的例子请见 <link linkend="date_time.io_tutorial">指南</link>。</entry>
          </row>

          <row>
            <entry valign="top" morerows="1"><screen>void date_gen_phrase_strings(...)
  Parameters:
    input_collection_type</screen></entry>
            <entry>Sets new date generator phrase strings in date_gen_parser. The input collection is a vector of strings (for details on these strings see <link linkend="io_objects.date_generators">date generator formatter/parser documentation</link>).<sbr/>
            设置 date_gen_parser 中的新日期生成器对象。其中 input collection 为字符串 vector(有关这些字符串的细节请见 
            <link linkend="io_objects.date_generators">日期生成器格式器/分析器的文档</link>)。</entry>
          </row>
          <row>
            <entry><screen></screen></entry>
          </row>

          <row>
            <entry valign="top" morerows="1"><screen>void short_weekday_names(...)
  Parameter:
    input_collection_type</screen></entry>
            <entry>Replace strings used when 'getting' short weekdays.<sbr/>
            替换用于输入短周日名的字符串。</entry>
          </row>
          <row>
            <entry>see the <link linkend="date_time.io_tutorial">tutorial</link> for a complete example.<sbr/>
            完整的例子请见 <link linkend="date_time.io_tutorial">指南</link>。</entry>
          </row>

          <row>
            <entry valign="top" morerows="1"><screen>void long_weekday_names(...)
  Parameter:
    input_collection_type</screen></entry>
            <entry>Replace strings used when 'getting' long weekdays.<sbr/>
            替换用于输入长周日名的字符串。</entry>
          </row>
          <row>
            <entry>see the <link linkend="date_time.io_tutorial">tutorial</link> for a complete example.<sbr/>
            完整的例子请见 <link linkend="date_time.io_tutorial">指南</link>。</entry>
          </row>

          <row>
            <entry valign="top" morerows="1"><screen>void short_month_names(...)
  Parameter:
    input_collection_type</screen></entry>
            <entry>Replace strings used when 'getting' short months.<sbr/>
            替换用于输入短月份名的字符串。</entry>
          </row>
          <row>
            <entry>see the <link linkend="date_time.io_tutorial">tutorial</link> for a complete example.<sbr/>
            完整的例子请见 <link linkend="date_time.io_tutorial">指南</link>。</entry>
          </row>

          <row>
            <entry valign="top" morerows="1"><screen>void long_month_names(...)
  Parameter:
    input_collection_type</screen></entry>
            <entry>Replace strings used when 'getting' long months.<sbr/>
            替换用于输入长月份名的字符串。</entry>
          </row>
          <row>
            <entry>see the <link linkend="date_time.io_tutorial">tutorial</link> for a complete example.<sbr/>
            完整的例子请见 <link linkend="date_time.io_tutorial">指南</link>。</entry>
          </row>

          <row>
            <entry valign="top" morerows="1"><screen>InItrT get(...)
  Common parameters for all 
  'get' functions:
    InItrT from
    InItrT to
    ios_base
  Unique parameter for 'get' funcs:
    gregorian object</screen></entry>
            <entry>There are 13 get functions in the date_input_facet. The common parameters are: an iterator pointing to the begining of the stream, an iterator pointing to the end of the stream, and an ios_base object. Each unique gregorian object has it's own get function. Each unique get function is described below.<sbr/>
            在 date_input_facet 中有13个 get 函数。它们的共同参数是：一个指向流的开始位置的迭代器，
            一个指向流的结束位置的迭代器，以及一个 ios_base 对象。每个格里历对象都有自己的 get 函数。
            每个 get 函数描述如下。</entry>
          </row>
          <row>
            <entry><screen></screen></entry>
          </row>

          <row>
            <entry valign="top" morerows="1"><screen>InItrT get(..., date)</screen></entry>
            <entry>Gets a date object from the stream using the format set by <code>format(...)</code> or the default.<sbr/>
            从流中取出一个 date 对象，使用由 <code>format(...)</code> 设置的格式或缺省格式。</entry>
          </row>
          <row>
            <entry><screen>ss.str("2005-Jan-01");
ss >> d; // default format 缺省格式</screen></entry>
          </row>

          <row>
            <entry valign="top" morerows="1"><screen>InItrT get(..., month)</screen></entry>
            <entry>Gets a month object from the stream using the format set by <code>month_format(...)</code> or the default.<sbr/>
            从流中取出一个 month 对象，使用由 <code>month_format(...)</code> 设置的格式或缺省格式。</entry>
          </row>
          <row>
            <entry><screen>ss.str("Feb");
ss >> m; // default format 缺省格式</screen></entry>
          </row>

          <row>
            <entry valign="top" morerows="1"><screen>InItrT get(..., day_of_week)</screen></entry>
            <entry>Gets a day of week object from the stream using the format set by <code>weekday_format(...)</code> or the default.<sbr/>
            从流中取出一个 day of week 对象，使用由 <code>weekday_format(...)</code> 设置的格式或缺省格式。</entry>
          </row>
          <row>
            <entry><screen>ss.str("Sun");
ss >> dow; // default format 缺省格式</screen></entry>
          </row>

          <row>
            <entry valign="top" morerows="1"><screen>InItrT get(..., day)</screen></entry>
            <entry>Gets a day of month object from the stream as a two digit number.<sbr/>
            从流中取出两位数字作为 day of month 对象。</entry>
          </row>
          <row>
            <entry><screen>"01" // January 1st 1月1日</screen></entry>
          </row>

          <row>
            <entry valign="top" morerows="1"><screen>InItrT get(..., year)</screen></entry>
            <entry>Gets a year object from the stream as a number. The number of expected digits depends on the year format.<sbr/>
            从流中取出一个数字作为 year 对象。该数字的位数取决于年份格式。</entry>
          </row>
          <row>
            <entry><screen>ss/str("2005");
ss >> y; // default format 缺省格式</screen></entry>
          </row>

          <row>
            <entry valign="top" morerows="1"><screen>InItrT get(..., days)</screen></entry>
            <entry>Gets a days object from the stream as a number.<sbr/>
            从流中取出一个数字作为 days 对象。</entry>
          </row>
          <row>
            <entry><screen>ss.str("356");
ss >> dys; // a full year 一整年</screen></entry>
          </row>

          <row>
            <entry valign="top" morerows="1"><screen>InItrT get(..., date_period)</screen></entry>
            <entry>Gets a date_period from the stream. The format of the dates will use the format set by <code>format(..)</code> or the default date format. The type of period (open or closed range) and the delimiters used are those used by the period_parser.<sbr/>
            从流中取出一个 date_period. dates 的格式使用由 <code>format(..)</code> 设置的格式或缺省的日期格式。
            period 的类型(开或闭区间)以及使用的分隔符为 period_parser 所使用的设置。</entry>
          </row>
          <row>
            <entry>see the <link linkend="date_time.io_tutorial">tutorial</link> for a complete example.<sbr/>
            完整的例子请见 <link linkend="date_time.io_tutorial">指南</link>。</entry>
          </row>

          <row>
            <entry valign="top" morerows="1"><screen>InItrT get(..., partial_date)</screen></entry>
            <entry>Gets a partial_date date_generator object from the stream. The month format used is set by <code>month_format(..)</code> or the default. The day of month is represented as a two digit number.<sbr/>
            从流中取出一个 partial_date date_generator 对象。月份格式使用由 <code>month_format(..)</code>
            设置的格式或缺省格式。day of month 以两位数字表示。</entry>
          </row>
          <row>
            <entry><screen>"01 Jan" // default formats 缺省格式
"01 January" // long month format 长月份名格式</screen></entry>
          </row>

          <row>
            <entry valign="top" morerows="1"><screen>InItrT get(..., date_generator)
  Date Generator Type:
    nth_day_of_the_week_in_month</screen></entry>
            <entry>Gets a nth_day_of_the_week_in_month object from the stream. The month format is set by <code>month_format(...)</code> or the default. The weekday format is set by <code>weekday_format(...)</code> or the default. The remaining phrase elements are set in the <link linkend ="io_objects.date_generators">date_generator_parser</link>.<sbr/>
            从流中取出一个  nth_day_of_the_week_in_month 对象。月份格式使用由 <code>month_format(...)</code>
            设置的格式或缺省格式。weekday 格式为由 <code>weekday_format(...)</code> 设置的格式或缺省格式。
            其它短语元素在 <link linkend ="io_objects.date_generators">date_generator_parser</link> 中设置。</entry>
          </row>
          <row>
            <entry><screen>"third Fri in May" // defaults 缺省</screen></entry>
          </row>

          <row>
            <entry valign="top" morerows="1"><screen>InItrT get(..., date_generator)
  Date Generator Type:
    first_day_of_the_week_in_month</screen></entry>
            <entry>Gets a first_day_of_the_week_in_month object from the stream. The month format is set by <code>month_format(...)</code> or the default. The weekday format is set by <code>weekday_format(...)</code> or the default. The remaining phrase elements are set in the <link linkend ="io_objects.date_generators">date_generator_parser</link>.<sbr/>
            从流中取出一个 first_day_of_the_week_in_month 对象。月份格式使用由 <code>month_format(..)</code> 
            设置的格式或缺省格式。weekday 格式为由 <code>weekday_format(...)</code> 设置的格式或缺省格式。
            其它短语元素在 <link linkend ="io_objects.date_generators">date_generator_parser</link> 中设置。</entry>
          </row>
          <row>
            <entry><screen>"first Wed of Jun" // defaults 缺省</screen></entry>
          </row>

          <row>
            <entry valign="top" morerows="1"><screen>InItrT get(..., date_generator)
  Date Generator Type:
    last_day_of_the_week_in_month</screen></entry>
            <entry>Gets a last_day_of_the_week_in_month object from the stream. The month format is set by <code>month_format(...)</code> or the default. The weekday format is set by <code>weekday_format(...)</code> or the default. The remaining phrase elements are set in the <link linkend ="io_objects.date_generators">date_generator_parser</link>.<sbr/>
            从流中取出一个 last_day_of_the_week_in_month 对象。月份格式使用由 <code>month_format(..)</code> 
            设置的格式或缺省格式。weekday 格式为由 <code>weekday_format(...)</code> 设置的格式或缺省格式。
            其它短语元素在 <link linkend ="io_objects.date_generators">date_generator_parser</link> 中设置。</entry>
          </row>
          <row>
            <entry><screen>"last Tue of Mar" // defaults 缺省</screen></entry>
          </row>

          <row>
            <entry valign="top" morerows="1"><screen>InItrT get(..., date_generator)
  Date Generator Type:
    first_day_of_the_week_after</screen></entry>
            <entry>Gets a first_day_of_the_week_after object from the stream. The weekday format is set by <code>weekday_format(...)</code> or the default. The remaining phrase elements are set in the <link linkend ="io_objects.date_generators">date_generator_parser</link>.<sbr/>
            从流中取出一个 first_day_of_the_week_after 对象。weekday 格式为由 <code>weekday_format(...)</code> 
            设置的格式或缺省格式。其它短语元素在 <link linkend ="io_objects.date_generators">date_generator_parser</link> 
            中设置。</entry>
          </row>
          <row>
            <entry><screen>"first Sat after" // defaults 缺省</screen></entry>
          </row>

          <row>
            <entry valign="top" morerows="1"><screen>InItrT get(..., date_generator)
  Date Generator Type:
    first_day_of_the_week_before</screen></entry>
            <entry>Gets a first_day_of_the_week_before object from the stream. The weekday format is set by <code>weekday_format(...)</code> or the default. The remaining phrase elements are set in the <link linkend ="io_objects.date_generators">date_generator_parser</link>.<sbr/>
            从流中取出一个 first_day_of_the_week_before 对象。weekday 格式为由 <code>weekday_format(...)</code>
            设置的格式或缺省格式。其它短语元素在 <link linkend ="io_objects.date_generators">date_generator_parser</link> 
            中设置。</entry>
          </row>
          <row>
            <entry><screen>"first Mon before" // defaults 缺省</screen></entry>
          </row>

        </tbody>
      </tgroup>
    </informaltable>
  </para>

</section>
