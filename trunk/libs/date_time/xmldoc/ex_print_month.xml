<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE library PUBLIC "-//Boost//DTD BoostBook XML V1.0//EN" 
"../../../tools/boostbook/dtd/boostbook.dtd">

<!-- Copyright (c) 2001-2004 CrystalClear Software, Inc.
     Subject to the Boost Software License, Version 1.0. 
     (See accompanying file LICENSE_1_0.txt or  http://www.boost.org/LICENSE_1_0.txt)
-->

<section id="date_time.examples.print_month">
  <title>Print Month 打印月份</title>

  <para>  
    Simple utility to print out days of the month with the days of a month. Demontstrates date iteration (date_time::date_itr).<sbr/>
    一个简单的工具，打印一个月的所有日期。示范了日期迭代器(date_time::date_itr).
  </para>
  <programlisting>
    <![CDATA[
  /* This example prints all the dates in a month. It demonstrates
   * the use of iterators as well as functions of the gregorian_calendar
   * 本例打印一个月的所有日期。它示范了迭代器和 gregorian_calendar 函数的使用
   * 
   * Output:
   * 输出：
   * Enter Year: 2002
   * Enter Month(1..12): 2
   * 2002-Feb-01 [Fri]
   * 2002-Feb-02 [Sat]
   * 2002-Feb-03 [Sun]
   * 2002-Feb-04 [Mon]
   * 2002-Feb-05 [Tue]
   * 2002-Feb-06 [Wed]
   * 2002-Feb-07 [Thu]
   */

  #include "boost/date_time/gregorian/gregorian.hpp"
  #include <iostream>

  int
  main()
  {
    std::cout << "Enter Year: ";
    int year, month;
    std::cin >> year;
    std::cout << "Enter Month(1..12): ";
    std::cin >> month;

    using namespace boost::gregorian;
    try {
      //Use the calendar to get the last day of the month
      //使用 calendar 取得该月的最后一天
      int eom_day = gregorian_calendar::end_of_month_day(year,month);
      date endOfMonth(year,month,eom_day);

      //construct an iterator starting with firt day of the month
      //构造一个迭代器，从该月的第一天开始
      day_iterator ditr(date(year,month,1));
      //loop thru the days and print each one
      //按日子循环并打印每一天
      for (; ditr <= endOfMonth; ++ditr) {
  #if defined(BOOST_DATE_TIME_NO_LOCALE) 
        std::cout << to_simple_string(*ditr) << " ["
  #else
        std::cout << *ditr << " ["
  #endif
                  << ditr->day_of_week() << "]"
                  << std::endl; 
      }
    }
    catch(std::exception& e) {

      std::cout << "Error bad date, check your entry: \n"
                << "  Details: " << e.what() << std::endl;
    }
    return 0;
  }

    ]]>
  </programlisting>
</section>
