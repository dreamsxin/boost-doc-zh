[section:overwrite overwrite]

[heading Prototype 原型]

``
template<
    class SinglePassRange1,
    class SinglePassRange2
    >
void overwrite(const SinglePassRange1& from,
               SinglePassRange2& to);
``

[heading Description 说明]

`overwrite` assigns the values from the range `from` into the range `to`.\n
`overwrite` 将来自区间 `from` 的值赋值至区间 `to` 中。

[heading Definition 定义]

Defined in the header file `boost/range/algorithm_ext/overwrite.hpp`\n
定义于头文件 `boost/range/algorithm_ext/overwrite.hpp` 中

[heading Requirements 要求]

# `SinglePassRange1` is a model of the __single_pass_range__ Concept.\n
  `SinglePassRange1` 符合 __single_pass_range__ 概念。
# `SinglePassRange2` is a model of the __single_pass_range__ Concept.\n
  `SinglePassRange2` 符合 __single_pass_range__ 概念。
# `SinglePassRange2` is mutable.\n
  `SinglePassRange2` 可写。
# `distance(SinglePassRange1) <= distance(SinglePassRange2)`
# `SinglePassRange1`'s value type is convertible to `SinglePassRange2`'s value type.\n
  `SinglePassRange1` 的值类型可转换为 `SinglePassRange2` 的值类型。

[heading Complexity 复杂度]

Linear. `distance(rng1)` assignments are performed.\n
线性。执行 `distance(rng1)` 次赋值。

[endsect]
