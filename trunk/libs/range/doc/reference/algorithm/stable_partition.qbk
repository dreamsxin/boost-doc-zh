[section:stable_partition stable_partition]

[heading Prototype 原型]

``
template<class ForwardRange, class UnaryPredicate>
typename range_iterator<ForwardRange>::type
stable_partition(ForwardRange& rng, UnaryPredicate pred);

template<class ForwardRange, class UnaryPredicate>
typename range_iterator<const ForwardRange>::type
stable_partition(const ForwardRange& rng, UnaryPredicate pred);

template<
    range_return_value re,
    class ForwardRange,
    class UnaryPredicate
>
typename range_return<ForwardRange, re>::type
stable_partition(ForwardRange& rng, UnaryPredicate pred);

template<
    range_return_value re,
    class ForwardRange,
    class UnaryPredicate
>
typename range_return<const ForwardRange, re>::type
stable_partition(const ForwardRange& rng, UnaryPredicate pred);
``

[heading Description 说明]

`stable_partition` reorders the elements in the range `rng` base on the function object `pred`. Once this function has completed all of the elements that satisfy `pred` appear before all of the elements that fail to satisfy it. `stable_partition` differs from `partition` because it preserves relative order. It is stable.\n
`stable_partition` 基于函数对象 `pred` 对区间 `rng` 中的元素进行重新排序。当函数执行完成后，所有满足 `pred` 
的元素将出现在所有不满足该条件的元素之前。`stable_partition` 与 `partition` 不同，因为它保留了相对顺序。它是稳定的。

For the versions that return an iterator, the return value is the iterator to the first element that fails to satisfy `pred`.\n
对于返回迭代器的版本，返回值为指向不满足 `pred` 的第一个元素的迭代器。

For versions that return a `range_return`, the `found` iterator is the iterator to the first element that fails to satisfy `pred`.\n
对于返回 `range_return` 的版本，`found` 迭代器为指向不满足 `pred` 的第一个元素的迭代器。

[heading Definition 定义]

Defined in the header file `boost/range/algorithm/stable_partition.hpp`\n
定义于头文件 `boost/range/algorithm/stable_partition.hpp` 中

[heading Requirements 要求]

* `ForwardRange` is a model of the __forward_range__ Concept.\n
  `ForwardRange` 符合 __forward_range__ 概念。
* `ForwardRange` is mutable.\n
  `ForwardRange` 可写。
* `UnaryPredicate` is a model of the `PredicateConcept`.\n
  `UnaryPredicate` 符合 `PredicateConcept`.

[heading Complexity 复杂度]

Best case: `O(N)` where `N` is `distance(rng)`.
Worst case: `N * log(N)` swaps, where `N` is `distance(rng)`.\n
最佳情况：`O(N)`，其中 `N` 为 `distance(rng)`。
最坏情况：`N * log(N)` 次交换，其中 `N` 为 `distance(rng)`。


[endsect]


