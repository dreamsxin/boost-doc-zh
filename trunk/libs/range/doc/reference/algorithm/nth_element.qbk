[section:nth_element nth_element]

[heading Prototype 原型]

``
template<class RandomAccessRange>
RandomAccessRange& nth_element(
    RandomAccessRange& rng,
    typename range_iterator<RandomAccessRange>::type nth);

template<class RandomAccessRange>
const RandomAccessRange& nth_element(
    const RandomAccessRange& rng,
    typename range_iterator<const RandomAccessRange>::type nth);

template<class RandomAccessRange>
RandomAccessRange& nth_element(
    RandomAccessRange& rng,
    typename range_iterator<RandomAccessRange>::type nth,
    BinaryPredicate sort_pred);

template<class RandomAccessRange>
const RandomAccessRange& nth_element(
    const RandomAccessRange& rng,
    typename range_iterator<const RandomAccessRange>::type nth,
    BinaryPredicate sort_pred);
``

[heading Description 说明]

`nth_element` partially orders a range of elements. `nth_element` arranges the range `rng` such that the element corresponding with the iterator `nth` is the same as the element that would be in that position if `rng` has been sorted.\n
`nth_element` 对区间中的元素进行部分排序。`nth_element` 将区间 `rng` 重新安排，使得与迭代器 `nth` 相对应的元素刚好就是当 `rng` 
排好序后在那个位置的元素。


[heading Definition 定义]

Defined in the header file `boost/range/algorithm/nth_element.hpp`\n
定义于头文件 `boost/range/algorithm/nth_element.hpp` 中

[heading Requirements 要求]

[*For the non-predicate version: 对于不带谓词的版本：]

* `RandomAccessRange` is a model of the __random_access_range__ Concept.\n
  `RandomAccessRange` 符合 __random_access_range__ 概念。
* `RandomAccessRange` is mutable.\n
  `RandomAccessRange` 可写。
* `RandomAccessRange`'s value type is a model of the `LessThanComparableConcept`.\n
  `RandomAccessRange` 的值类型符合 `LessThanComparableConcept`.
* The ordering relation on `RandomAccessRange`'s value type is a [*/strict weak ordering/], as defined in the `LessThanComparableConcept` requirements.\n
  `RandomAccessRange` 值类型的排序关系是一个 [*/严格弱序/]，正如 `LessThanComparableConcept` 要求中所定义的。


[*For the predicate version: 对于带谓词的版本：]

* `RandomAccessRange` is a model of the __random_access_range__ Concept.\n
  `RandomAccessRange` 符合 __random_access_range__ 概念。
* `RandomAccessRange` is mutable.\n
  `RandomAccessRange` 可写。
* `BinaryPredicate` is a model of the `StrictWeakOrderingConcept`.\n
  `BinaryPredicate` 符合 `StrictWeakOrderingConcept`.
* `RandomAccessRange`'s value type is convertible to both of `BinaryPredicate`'s argument types.\n
  `RandomAccessRange` 的值类型可转换为 `BinaryPredicate` 的两个参数类型。


[heading Complexity 复杂度]

On average, linear in `distance(rng)`.\n
平均来说，与 `distance(rng)` 成线性关系。

[endsect]


