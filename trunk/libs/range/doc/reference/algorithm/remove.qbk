[section:remove remove]

[heading Prototype 原型]

``
template<
    class ForwardRange,
    class Value
    >
typename range_iterator<ForwardRange>::type
remove(ForwardRange& rng, const Value& val);

template<
    class ForwardRange,
    class Value
    >
typename range_iterator<const ForwardRange>::type
remove(const ForwardRange& rng, const Value& val);

template<
    range_return_value re,
    class ForwardRange,
    class Value
    >
typename range_return<ForwardRange,re>::type
remove(ForwardRange& rng, const Value& val);

template<
    range_return_value re,
    class ForwardRange,
    class Value
    >
typename range_return<const ForwardRange,re>::type
remove(const ForwardRange& rng, const Value& val);
``

[heading Description 说明]

`remove` removes from `rng` all of the elements `x` for which `x == val` is `true`. The versions of `remove` that return an iterator, return an iterator `new_last` such that the range `[begin(rng), new_last)` contains no elements equal to `val`. The `range_return` versions of `remove` defines `found` as the new last element. The iterators in the range `[new_last, end(rng))` are dereferenceable, but the elements are unspecified.\n
`remove` 从 `rng` 中删除所有满足 `x == val` 为 `true` 的元素 `x`。返回迭代器的 `remove` 版本将返回一个迭代器 `new_last` 
使得区间 `[begin(rng), new_last)` 中没有等于 `val` 的元素。`remove` 的 `range_return` 版本定义了 `found` 作为新的末尾元素。
区间 `[new_last, end(rng))` 中的迭代器是可提领的，但其元素不确定。

[heading Definition 定义]

Defined in the header file `boost/range/algorithm/remove.hpp`\n
定义于头文件 `boost/range/algorithm/remove.hpp` 中

[heading Requirements 要求]

* `ForwardRange` is a model of the __forward_range__ Concept.\n
  `ForwardRange` 符合 __forward_range__ 概念。
* `ForwardRange` is mutable.\n
  `ForwardRange` 可写。
* `Value` is a model of the `EqualityComparableConcept`.\n
  `Value` 符合 `EqualityComparableConcept`.
* Objects of type `Value` can be compared for equality with objects of `ForwardRange`'s value type.\n
  类型为 `Value` 的对象可以与 `ForwardRange` 值类型的对象比较相等性。

[heading Complexity 复杂度]

Linear. `remove` performs exactly `distance(rng)` comparisons for equality.\n
线性。`remove` 执行正好 `distance(rng)` 次相等性比较。

[endsect]


