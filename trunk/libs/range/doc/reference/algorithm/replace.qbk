[section:replace replace]

[heading Prototype 原型]

``
template<
    class ForwardRange,
    class Value
    >
ForwardRange& replace(ForwardRange& rng, const Value& what, const Value& with_what);

template<
    class ForwardRange,
    class UnaryPredicate
    >
const ForwardRange& replace(const ForwardRange& rng, const Value& what, const Value& with_what);
``

[heading Description 说明]

`replace` every element in `rng` equal to `what` with `with_what`. Return a reference to `rng`.\n
`replace` 将 `rng` 中每一个等于 `what` 的元素替换为 `with_what`。返回一个指向 `rng` 的引用。

[heading Definition 定义]

Defined in the header file `boost/range/algorithm/replace.hpp`\n
定义于头文件 `boost/range/algorithm/replace.hpp` 中

[heading Requirements 要求]

* `ForwardRange` is a model of the __forward_range__ Concept.\n
  `ForwardRange` 符合 __forward_range__ 概念。
* `ForwardRange` is mutable.\n
  `ForwardRange` 可写。
* `Value` is convertible to `ForwardRange`'s value type.\n
  `Value` 可转换为 `ForwardRange` 的值类型。
* `Value` is a model of the `AssignableConcept`.\n
  `Value` 符合 `AssignableConcept`.
* `Value` is a model of the `EqualityComparableConcept`, and may be compared for equality with objects of `ForwardRange`'s value type.\n
  `Value` 符合 `EqualityComparableConcept`，且可以与 `ForwardRange` 值类型的对象进行相等性比较。

[heading Complexity 复杂度]

Linear. `replace` performs exactly `distance(rng)` comparisons for equality and at most `distance(rng)` assignments.\n
线性。`replace` 执行正好 `distance(rng)` 次相等性比较以及最多 `distance(rng)` 次赋值。

[endsect]


