[section:adjacent_find adjacent_find]

[heading Prototype 原型]

``
template<class ForwardRange>
typename range_iterator<ForwardRange>::type
adjacent_find(ForwardRange& rng);

template<class ForwardRange>
typename range_iterator<const ForwardRange>::type
adjacent_find(const ForwardRange& rng);

template<class ForwardRange, class BinaryPredicate>
typename range_iterator<ForwardRange>::type
adjacent_find(ForwardRange& rng, BinaryPred pred);

template<class ForwardRange, class BinaryPredicate>
typename range_iterator<const ForwardRange>::type
adjacent_find(const ForwardRange& rng, BinaryPred pred);

template<range_return_value_re, class ForwardRange>
typename range_return<ForwardRange, re>::type
adjacent_find(ForwardRange& rng);

template<range_return_value_re, class ForwardRange>
typename range_return<const ForwardRange, re>::type
adjacent_find(const ForwardRange& rng);

template<
    range_return_value re,
    class ForwardRange,
    class BinaryPredicate
    >
typename range_return<ForwardRange, re>::type
adjacent_find(ForwardRange& rng, BinaryPredicate pred);

template<
    range_return_value re,
    class ForwardRange,
    class BinaryPredicate
    >
typename range_return<const ForwardRange, re>::type
adjacent_find(const ForwardRange& rng, BinaryPredicate pred);
``

[heading Description 说明]

[*Non-predicate versions: 不带谓词的版本：]

`adjacent_find` finds the first adjacent elements `[x,y]` in `rng` where `x == y`\n
`adjacent_find` 在 `rng` 中查找第一对满足 `x == y` 相邻元素 `[x,y]`

[*Predicate versions: 带谓词的版本：]

`adjacent_find` finds the first adjacent elements `[x,y]` in `rng` where `pred(x,y)` is `true`.
`adjacent_find` 在 `rng` 中查找第一对令 `pred(x,y)` 为 `true` 相邻元素 `[x,y]`

[heading Definition 定义]

Defined in the header file `boost/range/algorithm/adjacent_find.hpp`\n
定义于头文件 `boost/range/algorithm/adjacent_find.hpp` 中

[heading Requirements 要求]

[*For the non-predicate versions of adjacent_find: 不带谓词的版本：]

* `ForwardRange` is a model of the __forward_range__ Concept.\n
  `ForwardRange` 符合 __forward_range__ 概念。
* `ForwardRange`'s value type is a model of the `EqualityComparableConcept`.\n
  `ForwardRange` 的值类型符合 `EqualityComparableConcept`.

[*For the predicate versions of adjacent_find: 带谓词的版本：]

* `ForwardRange` is a model of the __forward_range__ Concept.\n
  `ForwardRange` 符合 __forward_range__ 概念。
* `BinaryPredicate` is a model of the `BinaryPredicateConcept`.\n
  `BinaryPredicate` 符合 `BinaryPredicateConcept`.
* `ForwardRange`'s value type is convertible to `BinaryPredicate`'s first argument type and to `BinaryPredicate`'s second argument type.\n
  `ForwardRange` 的值类型可转换为 `BinaryPredicate` 的第一参数类型和第二参数类型。

[heading Complexity 复杂度]

Linear. If `empty(rng)` then no comparisons are performed; otherwise, at most `distance(rng) - 1` comparisons.\n
线性。如果 `empty(rng)` 则不执行比较；否则最多 `distance(rng) - 1` 次比较。

[endsect]


