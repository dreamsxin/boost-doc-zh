[section:random_shuffle random_shuffle]

[heading Prototype 原型]

``
template<class RandomAccessRange>
RandomAccessRange& random_shuffle(RandomAccessRange& rng);

template<class RandomAccessRange>
const RandomAccessRange& random_shuffle(const RandomAccessRange& rng);

template<class RandomAccessRange, class Generator>
RandomAccessRange& random_shuffle(RandomAccessRange& rng, Generator& gen);

template<class RandomAccessRange, class Generator>
const RandomAccessRange& random_shuffle(const RandomAccessRange& rng, Generator& gen);
``

[heading Description 说明]

`random_shuffle` randomly rearranges the elements in `rng`. The versions of `random_shuffle` that do not specify a `Generator` use an internal random number generator. The versions of `random_shuffle` that do specify a `Generator` use this instead. Returns the shuffles range.\n
`random_shuffle` 对 `rng` 中的元素进行随机重排。的不指定 `Generator` 的 `random_shuffle` 版本使用一个内部的随机数生成器。
指定 `Generator` 的 `random_shuffle` 版本则使用指定的生成器。返回打乱后的区间。

[heading Definition 定义]

Defined in the header file `boost/range/algorithm/random_shuffle.hpp`\n
定义于头文件 `boost/range/algorithm/random_shuffle.hpp` 中

[heading Requirements 要求]

[*For the version without a Generator: 对于无生成器的版本：]

* `RandomAccessRange` is a model of the __random_access_range__ Concept.\n
  `RandomAccessRange` 符合 __random_access_range__ 概念。

[*For the version with a Generator: 对于带生成器的版本：]

* `RandomAccessRange` is a model of the __random_access_range__ Concept.\n
  `RandomAccessRange` 符合 __random_access_range__ 概念。
* `Generator` is a model of the `RandomNumberGeneratorConcept`.\n
  `Generator` 符合 `RandomNumberGeneratorConcept`.
* `RandomAccessRange`'s distance type is convertible to `Generator`'s argument type.\n
  `RandomAccessRange` 的距离类型可转换为 `Generator` 的参数类型。

[heading Precondition: 前提条件：]

* `distance(rng)` is less than `gen`'s maximum value.\n
  `distance(rng)` 小于 `gen` 的最大值。


[heading Complexity 复杂度]

Linear. If `!empty(rng)`, exactly `distance(rng) - 1` swaps are performed.\n
线性。如果 `!empty(rng)`，则正好执行 `distance(rng) - 1` 次交换。

[endsect]


