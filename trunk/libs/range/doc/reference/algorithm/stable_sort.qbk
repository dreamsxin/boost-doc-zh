[section:stable_sort stable_sort]

[heading Prototype 原型]

``
template<class RandomAccessRange>
RandomAccessRange& stable_sort(RandomAccessRange& rng);

template<class RandomAccessRange>
const RandomAccessRange& stable_sort(const RandomAccessRange& rng);

template<class RandomAccessRange, class BinaryPredicate>
RandomAccessRange& stable_sort(RandomAccessRange& rng, BinaryPredicate pred);

template<class RandomAccessRange, class BinaryPredicate>
const RandomAccessRange& stable_sort(const RandomAccessRange& rng, BinaryPredicate pred);
``

[heading Description 说明]

`stable_sort` sorts the elements in `rng` into ascending order. `stable_sort` is guaranteed to be stable. The order is preserved for equivalent elements.\n
`stable_sort` 按升序对 `rng` 中的元素进行排序。`stable_sort` 保证是稳定的。相等元素的顺序被保留。

For versions of the `stable_sort` function without a predicate ascending order is defined by `operator<()` such that for all adjacent elements `[x,y]`, `y < x == false`.\n
对于不带谓词的 `stable_sort` 函数版本，升序是由 `operator<()` 定义的，即对于所有相邻元素 `[x,y]`, `y < x == false`.

For versions of the `stable_sort` function with a predicate, ascending order is designed by `pred` such that for all adjacent elements `[x,y]`, `pred(y,x) == false`.\n
对于带谓词的 `stable_sort` 函数版本，升序是由 `pred` 决定的，即对于所有相邻元素 `[x,y]`, `pred(y,x) == false`.

[heading Definition 定义]

Defined in the header file `boost/range/algorithm/stable_sort.hpp`\n
定义于头文件 `boost/range/algorithm/stable_sort.hpp` 中

[heading Requirements 要求]

[*For versions of stable_sort without a predicate 对于不带谓词的stable_sort版本:]

* `RandomAccessRange` is a model of the __random_access_range__ Concept.\n
  `RandomAccessRange` 符合 __random_access_range__ 概念。
* `RandomAccessRange` is mutable.\n
  `RandomAccessRange` 可写。
* `RandomAccessRange`'s value type is a model of the `LessThanComparableConcept`.\n
  `RandomAccessRange` 的值类型符合 `LessThanComparableConcept`.
* The ordering relation on `RandomAccessRange`'s value type is a [*strict weak ordering], as defined in the `LessThanComparableConcept` requirements.\n
  `RandomAccessRange` 值类型的顺序关系是一个 [*严格弱序]，如 `LessThanComparableConcept` 要求中所定义的。

[*For versions of stable_sort with a predicate: 对于带谓词的stable_sort版本:]

* `RandomAccessRange` is a model of the __random_access_range__ Concept.\n
  `RandomAccessRange` 符合 __random_access_range__ 概念。
* `RandomAccessRange` is mutable.\n
  `RandomAccessRange` 可写。
* `BinaryPredicate` is a model of the `StrictWeakOrderingConcept`.\n
  `BinaryPredicate` 符合 `StrictWeakOrderingConcept`.
* `RandomAccessRange`'s value type is convertible to both of `BinaryPredicate`'s argument types.\n
  `RandomAccessRange` 的值类型可转换为 `BinaryPredicate` 的两个参数类型。

[heading Complexity 复杂度]

Best case: `O(N)` where `N` is `distance(rng)`.
Worst case: `O(N log(N)^2)` comparisons, where `N` is `distance(rng)`.\n
最佳情况：`O(N)`，其中 `N` 为 `distance(rng)`.
最坏情况：`O(N log(N)^2)` 次比较，其中 `N` 为 `distance(rng)`.

[endsect]


