[section:count count]

[heading Prototype 原型]

``
template<class SinglePassRange, class Value>
typename range_difference<SinglePassRange>::type
count(SinglePassRange& rng, const Value& val);

template<class SinglePassRange, class Value>
typename range_difference<const SinglePassRange>::type
count(const SinglePassRange& rng, const Value& val);
``

[heading Description 说明]

`count` returns the number of elements `x` in `rng` where `x == val` is `true`.\n
`count` 返回 `rng` 中满足 `x == val` 为 `true` 的元素 `x` 的数量。

[heading Definition 定义]

Defined in the header file `boost/range/algorithm/count.hpp`\n
定义于头文件 `boost/range/algorithm/count.hpp` 中

[heading Requirements 要求]

* `SinglePassRange` is a model of the __single_pass_range__ Concept.\n
  `SinglePassRange` 符合 __single_pass_range__ 概念。
* `Value` is a model of the `EqualityComparableConcept`.\n
  `Value` 符合 `EqualityComparableConcept`.
* `SinglePassRange`'s value type is a model of the `EqualityComparableConcept`.\n
  `SinglePassRange` 的值类型符合 `EqualityComparableConcept`.
* An object of `SinglePassRange`'s value type can be compared for equality with an object of type `Value`.\n
  `SinglePassRange` 的值类型的对象可以与 `Value` 类型的对象进行相等性比较。

[heading Complexity 复杂度]

Linear. Exactly `distance(rng)` comparisons.\n
线性。正好 `distance(rng)` 次比较。

[endsect]


