[section:sort sort]

[heading Prototype 原型]

``
template<class RandomAccessRange>
RandomAccessRange& sort(RandomAccessRange& rng);

template<class RandomAccessRange>
const RandomAccessRange& sort(const RandomAccessRange& rng);

template<class RandomAccessRange, class BinaryPredicate>
RandomAccessRange& sort(RandomAccessRange& rng, BinaryPredicate pred);

template<class RandomAccessRange, class BinaryPredicate>
const RandomAccessRange& sort(const RandomAccessRange& rng, BinaryPredicate pred);
``

[heading Description 说明]

`sort` sorts the elements in `rng` into ascending order. `sort` is not guaranteed to be stable. Returns the sorted range.\n
`sort` 将 `rng` 中的元素按升序排序。`sort` 不保证是稳定的。返回排序后的区间。

For versions of the `sort` function without a predicate, ascending order is defined by `operator<()` such that for all adjacent elements `[x,y]`, `y < x == false`.\n
对于不带谓词的 `sort` 函数版本，升序由 `operator<()` 定义，对于所有相邻元素 `[x,y]`, `y < x == false`。

For versions of the `sort` function with a predicate, ascending order is defined by `pred` such that for all adjacent elements `[x,y]`, `pred(y, x) == false`.\n
对于带有谓词的 `sort` 函数版本，升序由 `pred` 定义，对于所有相邻元素 `[x,y]`, `pred(y, x) == false`。

[heading Definition 定义]

Defined in the header file `boost/range/algorithm/sort.hpp`\n
定义于头文件 `boost/range/algorithm/sort.hpp` 中

[heading Requirements 要求]

[*For versions of sort without a predicate: 对于不带谓词的版本：]

* `RandomAccessRange` is a model of the __random_access_range__ Concept.\n
  `RandomAccessRange` 符合 __random_access_range__ 概念。
* `RandomAccessRange` is mutable.\n
  `RandomAccessRange` 可写。
* `RandomAccessRange`'s value type is a model of the `LessThanComparableConcept`.\n
  `RandomAccessRange` 的值类型符合 `LessThanComparableConcept`.
* The ordering relation on `RandomAccessRange`'s value type is a [*strict weak ordering], as defined in the `LessThanComparableConcept` requirements.\n
  `RandomAccessRange` 值类型的顺序关系是一个 [*严格弱序]，如 `LessThanComparableConcept` 要求中的定义。

[*For versions of sort with a predicate 对于带谓词的版本：]

* `RandomAccessRange` is a model of the __random_access_range__ Concept.\n
  `RandomAccessRange` 符合 __random_access_range__ 概念。
* `RandomAccessRange` is mutable.\n
  `RandomAccessRange` 可写。
* `BinaryPredicate` is a model of the `StrictWeakOrderingConcept`.\n
  `BinaryPredicate` 符合 `StrictWeakOrderingConcept`.
* `RandomAccessRange`'s value type is convertible to both of `BinaryPredicate`'s argument types.\n
  `RandomAccessRange` 的值类型可以转换为 `BinaryPredicate` 的两个参数类型。

[heading Complexity 复杂度]

`O(N log(N))` comparisons (both average and worst-case), where `N` is `distance(rng)`.\n
`O(N log(N))` 次比较(平均情况及最坏情况下)，其中 `N` 为 `distance(rng)`。

[endsect]


