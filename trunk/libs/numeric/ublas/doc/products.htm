<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <title>Special Products</title>
  <meta name="GENERATOR" content="Quanta Plus" />
  <meta name="AUTHOR" content="Gunter Winkler" />
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
  <link rel="stylesheet" type="text/css" href="ublas.css" />
  <link rel="stylesheet" type="text/css" href="doxygen.css" />
</head>
<body>

<h1><img src="../../../../boost.png" align="middle" />
特殊乘积(Special Products) </h1>

<h2>函数</h2>

<table summary="" border=0 cellpadding=0 cellspacing=0>
<tr>
<td class="memItemLeft" nowrap align=right valign=top>template&lt;class V, class E1, class E2&gt; BOOST_UBLAS_INLINE V &amp;&nbsp;</td>
<td class="memItemRight" valign=bottom><a class="el" href="#ga8">axpy_prod</a> (const matrix_expression&lt; E1 &gt; &amp;e1, const vector_expression&lt; E2 &gt; &amp;e2, V &amp;v, bool init=true)</td></tr>

<tr>
<td class="mdescLeft">&nbsp;</td>
<td class="mdescRight">计算<code>v += A x</code> 或 <code>v = A x</code> 使用一种优化形式。<a href="#ga8"></a><br />
  <br /></td></tr>
<tr>
<td class="memItemLeft" nowrap align=right valign=top>template&lt;class V, class E1, class E2&gt; BOOST_UBLAS_INLINE V &amp;&nbsp;</td>
<td class="memItemRight" valign=bottom><a class="el" href="#ga9">axpy_prod</a> (const vector_expression&lt; E1 &gt; &amp;e1, const matrix_expression&lt; E2 &gt; &amp;e2, V &amp;v, bool init=true)</td></tr>

<tr>
<td class="mdescLeft">&nbsp;</td>
<td class="mdescRight">计算<code></code><code>v += A<sup>T</sup> x</code> 或<code>v = A<sup>T</sup> x</code>使用一种优化形式。<br />
  <br /></td></tr>
<tr>
<td class="memItemLeft" nowrap align=right valign=top>template&lt;class M, class E1, class E2&gt; BOOST_UBLAS_INLINE M &amp;&nbsp;</td>
<td class="memItemRight" valign=bottom><a class="el" href="#ga7">axpy_prod</a> (const matrix_expression&lt; E1 &gt; &amp;e1, const matrix_expression&lt; E2 &gt; &amp;e2, M &amp;m, bool init=true)</td></tr>

<tr>
<td class="mdescLeft">&nbsp;</td>
<td class="mdescRight">计算<code></code><code>M += A X</code> 或<code>M = A X</code>使用一种优化形式。<a href="#ga7"></a><br />
  <br /></td></tr>
<tr>
<td class="memItemLeft" nowrap align=right valign=top>template&lt;class M, class E1, class E2&gt; BOOST_UBLAS_INLINE M &amp;&nbsp;</td>
<td class="memItemRight" valign=bottom><a class="el" href="#ga6">opb_prod</a> (const matrix_expression&lt; E1 &gt; &amp;e1, const matrix_expression&lt; E2 &gt; &amp;e2, M &amp;m, bool init=true)</td></tr>

<tr>
<td class="mdescLeft">&nbsp;</td>
<td class="mdescRight">计算<code></code><code>M += A X</code> 或<code>M = A X</code> 使用一种优化形式。<br />
  <br /></td></tr>
</table>

<hr />

<a class="anchor" name="ga8" doxytag="boost::numeric::ublas::axpy_prod" ></a>
<table summary="" class="mdTable" width="95%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table summary="" cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> BOOST_UBLAS_INLINE V&amp; axpy_prod           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const matrix_expression&lt; E1 &gt; &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>e1</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>const vector_expression&lt; E2 &gt; &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>e2</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>V &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>v</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>bool&nbsp;</td>
          <td class="mdname" nowrap> <em>init</em> = <code>true</code></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table summary="" cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>&nbsp;
      
    </td>
    <td>

<p>
计算 <code>v += A x</code> or <code>v = A x</code> <span class="mdescRight">使用一种优化形式。</span></p>
<dl compact>
  <dt><b>参数:</b></dt>
  <dd>
  <table summary="" border="0" cellspacing="2" cellpadding="0">
    <tr><td></td><td valign=top><em>e1</em>&nbsp;</td><td>矩阵表达式 <code>A</code> </td></tr>
    <tr><td></td><td valign=top><em>e2</em>&nbsp;</td>
    <td>向量表达式 <code>x</code> </td>
    </tr>
    <tr><td></td><td valign=top><em>v</em>&nbsp;</td><td>返回的结果向量<code>v</code> </td></tr>
    <tr><td></td><td valign=top><em>init</em>&nbsp;</td><td>一个布尔参数</td></tr>
  </table>
</dl>
<code>axpy_prod(A, x, v, init)</code> 实现知名的( well known )axpy-product。将<em>init</em> 设置为<code>true</code> 等价于在<code>axpy_prod</code>之前调用<code>v.clear()</code> 。当前<em>init</em> 的缺省值为<code>true</code>，但可能在将来发生改变。
<p>
到目前为止，一些针对于压缩矩阵的特化相比于prod有巨大的速度提升。</td>
  </tr>
</table>


<a class="anchor" name="ga9" doxytag="boost::numeric::ublas::axpy_prod" ></a>
<table summary="" class="mdTable" width="95%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table summary="" cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> BOOST_UBLAS_INLINE V&amp; axpy_prod           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const vector_expression&lt; E1 &gt; &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>e1</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>const matrix_expression&lt; E2 &gt; &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>e2</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>V &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>v</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>bool&nbsp;</td>
          <td class="mdname" nowrap> <em>init</em> = <code>true</code></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table summary="" cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>&nbsp;
      
    </td>
    <td>

<p>
计算<code></code><code>v += A<sup>T</sup> x</code> or <code>v = A<sup>T</sup> x</code><span class="mdescRight">使用一种优化形式。</span></p>
<dl compact><dt><b>参数:</b></dt><dd>
  <table summary="" border="0" cellspacing="2" cellpadding="0">
    <tr><td></td><td valign=top><em>e1</em>&nbsp;</td><td>向量表达式<code>x</code> </td></tr>
    <tr><td></td><td valign=top><em>e2</em>&nbsp;</td><td>矩阵表达式<code>A</code> </td></tr>
    <tr><td></td><td valign=top><em>v</em>&nbsp;</td><td>返回的结果向量<code>v</code> </td></tr>
    <tr><td></td><td valign=top><em>init</em>&nbsp;</td><td>一个布尔参数</td></tr>
  </table>
</dl>
<code>axpy_prod(x, A, v, init)</code>实现知名的( well known )axpy-product。将<em>init</em> 设置为<code>true</code> 等价于在<code>axpy_prod</code>之前调用<code>v.clear()</code> 。当前<em>init</em> 的缺省值为<code>true</code>，但可能在将来发生改变。<p>
到目前为止，一些针对于压缩矩阵的特化相比于prod有巨大的速度提升。</td>
  </tr>
</table>

<a class="anchor" name="ga7" doxytag="boost::numeric::ublas::axpy_prod" ></a>
<table summary="" class="mdTable" width="95%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table summary="" cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> BOOST_UBLAS_INLINE M&amp; axpy_prod           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const matrix_expression&lt; E1 &gt; &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>e1</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>const matrix_expression&lt; E2 &gt; &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>e2</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>M &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>m</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>bool&nbsp;</td>
          <td class="mdname" nowrap> <em>init</em> = <code>true</code></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table summary="" cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>&nbsp;
      
    </td>
    <td>

<p>
计算<code></code><code>M += A X</code> or <code>M = A X</code> <span class="mdescRight">使用一种优化形式。</span></p>
<dl compact><dt><b>参数:</b></dt><dd>
  <table summary="" border="0" cellspacing="2" cellpadding="0">
    <tr><td></td><td valign=top><em>e1</em>&nbsp;</td><td>矩阵表达式<code>A</code> </td></tr>
    <tr><td></td><td valign=top><em>e2</em>&nbsp;</td><td>矩阵表达式<code>X</code> </td></tr>
    <tr><td></td><td valign=top><em>m</em>&nbsp;</td><td>返回的结果矩阵<code></code><code>M</code> </td></tr>
    <tr><td></td><td valign=top><em>init</em>&nbsp;</td><td>一个布尔参数</td></tr>
  </table>
</dl>
<code>axpy_prod(A, X, M, init)</code> 实现知名的( well known )axpy-product。将<em>init</em> 设置为<code>true</code> 等价于在<code>axpy_prod</code>之前调用<code>M.clear()</code> 。当前<em>init</em> 的缺省值为<code>true</code>，但可能在将来发生改变。 
<p> 到目前为止没有特化。
</td>
  </tr>
</table>

<a class="anchor" name="ga6" doxytag="boost::numeric::ublas::opb_prod" ></a>

<table summary="" class="mdTable" width="95%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table summary="" cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> BOOST_UBLAS_INLINE M&amp; opb_prod           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const matrix_expression&lt; E1 &gt; &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>e1</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>const matrix_expression&lt; E2 &gt; &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>e2</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>M &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>m</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>bool&nbsp;</td>
          <td class="mdname" nowrap> <em>init</em> = <code>true</code></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table summary="" cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>&nbsp;
      
    </td>
    <td>

<p>
计算<code>M += A X</code> or <code>M = A X</code> <span class="mdescRight">使用一种优化形式。</span></p>
<dl compact><dt><b>参数:</b></dt><dd>
  <table summary="" border="0" cellspacing="2" cellpadding="0">
    <tr><td></td><td valign=top><em>e1</em>&nbsp;</td><td>矩阵表达式<code>A</code> </td></tr>
    <tr><td></td><td valign=top><em>e2</em>&nbsp;</td><td>矩阵表达式<code>X</code> </td></tr>
    <tr><td></td><td valign=top><em>m</em>&nbsp;</td>
      <td>返回的结果矩阵<code>M</code> </td>
    </tr>
    <tr><td></td><td valign=top><em>init</em>&nbsp;</td><td>一个布尔参数</td></tr>
  </table>
</dl>
<code>opb_prod(A, X, M, init)</code> 实现知名的( well known )axpy-product。将<em>init</em> 设置为<code>true</code> 等价于在<code>opb_prod</code>之前调用<code>M.clear()</code> 。当前<em>init</em> 的缺省值为<code>true</code>，但可能在将来发生改变。<p>
如果A的列数比行数少，这个函数会有一定的速度提升，因为这个乘积作为乘积的和(sum of outer products)来计算。</td>
  </tr>
</table>



<hr />
<p>Copyright (&copy;) 2000-2004 Michael Stevens, Mathias Koch, 
Joerg Walter, Gunter Winkler<br />
   Use, modification and distribution are subject to the
   Boost Software License, Version 1.0.
   (See accompanying file LICENSE_1_0.txt
   or copy at <a href="http://www.boost.org/LICENSE_1_0.txt">
      http://www.boost.org/LICENSE_1_0.txt
   </a>).
</p>
</body>
</html>
