<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>
  <meta http-equiv="Content-Language" content="en-us">
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
  <link rel="stylesheet" type="text/css" href="../../../../boost.css">

  <title>Interval-TODO.htm</title>
</head>

<body lang="en">
  <h1>区间算术库将来的改进</h1>

  <h2>来自于复审过程中的评论</h2>

  <ul>
    <li>有一个100%仅基于<code>LIA-1</code>而且没有其它的额外的类似于<code>IEEE 754</code>的要求的舍入策略将会更好一些.</li>

    <li>对于<code>pi</code>和其它的常量，当<code>Math constants librar</code>可用的时候,我们应当从这个库中来获取它们，
    .</li>
  </ul>

  <h2>各种事项</h2>

  <ul>
  <li>支持<code>g++</code>针对于<code>Pentium IV</code>的<code>-mfpmath=sse</code>代码优化编译选项，这需求一个不同的舍入策略类
    .</li>

    <li>有一个使用SSE2指令经过优化的<code>interval&lt;double&gt;</code>特化类.</li>

    <li>写一个针对于<code>MPFR</code>的特化萃取类(traits specialization)<code>interval&lt;MPFR&gt;</code>,以及它的非内建数据类型的萃取特化类。
    .</li>

    <li>在内建的数据类型上有一个更强壮的超越函数的实现(例如. 使用 MPFR)</li>

    <li>从<code>interval&lt;double&gt;</code> 到<code>interval&lt;float&gt;</code>的安全转化?需要偏特化.</li>

    <li>对于一些小的子表达式使用表达式模板类自动地使用更高效的未保护的舍入方式会更好(虽然你可以手动实现更大的表达式
    ).</li>
  </ul>
<hr>

  <p><a href="http://validator.w3.org/check?uri=referer"><img border="0" src=
  "http://www.w3.org/Icons/valid-html401" alt="Valid HTML 4.01 Transitional"
  height="31" width="88"></a></p>

  <p>Revised 
  <!--webbot bot="Timestamp" s-type="EDITED" s-format="%Y-%m-%d" startspan -->2006-12-24<!--webbot bot="Timestamp" endspan i-checksum="12172" --></p>

  <p><i>Copyright &copy; 2002 Guillaume Melquiond, Sylvain Pion, Herv&eacute;
  Br&ouml;nnimann, Polytechnic University</i></p>

  <p><i>Distributed under the Boost Software License, Version 1.0. (See
  accompanying file <a href="../../../../LICENSE_1_0.txt">LICENSE_1_0.txt</a>
  or copy at <a href=
  "http://www.boost.org/LICENSE_1_0.txt">http://www.boost.org/LICENSE_1_0.txt</a>)</i></p>
</body>
</html>
