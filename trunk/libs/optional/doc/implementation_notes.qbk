[/
    Boost.Optional

    Copyright (c) 2003-2007 Fernando Luis Cacciola Carballal

    Distributed under the Boost Software License, Version 1.0.
    (See accompanying file LICENSE_1_0.txt or copy at
    http://www.boost.org/LICENSE_1_0.txt)
]



[section:implementation_notes Implementation Notes 实现说明]

`optional<T>` is currently implemented using a custom aligned storage facility
built from `alignment_of` and `type_with_alignment` (both from Type Traits). It
uses a separate boolean flag to indicate the initialization state.
Placement new with `T`'s copy constructor and `T`'s destructor are explicitly used
to initialize,copy and destroy optional values.
As a result, `T`'s default constructor is effectively by-passed, but the exception
guarantees are basic.
It is planned to replace the current implementation with another with stronger
exception safety, such as a future `boost::variant`.\n
`optional<T>` 当前的实现使用了一个由 `alignment_of` 和 `type_with_alignment` (均来自 Type Traits)构建的定制对齐存储工具。
它使用一个独立的布尔标志来标识初始化状态。带有 `T` 的复制构造函数的 Placement new 以及 `T` 的析构函数被显式用于初始化、
复制和销毁 optional 的值。这样可以有效地绕过 `T` 的缺省构造函数，但是异常保证只能是基本的。
有计划用其它具有更强异常安全性的方法来替代当前的实现，如未来的 `boost::variant`. 



[endsect]
 
