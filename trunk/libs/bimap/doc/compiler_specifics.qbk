[/license

Boost.Bimap

Copyright (c) 2006-2007 Matias Capeletto

Distributed under the Boost Software License, Version 1.0.
(See accompanying file LICENSE_1_0.txt or copy at
http://www.boost.org/LICENSE_1_0.txt)

]

[/ QuickBook Document version 1.4 ]

[section:compiler_specifics Compiler specifics 编译器相关说明]

[table
[[Compiler 编译器][OS Tested 测试的操作系统][State 状态]]
[[GCC 3.3   ][Linux     ][Supported 支持]]
[[GCC 3.4   ][Linux     ][Supported 支持]]
[[GCC 4.0   ][Linux, Mac][Supported 支持]]
[[GCC 4.1   ][Linux     ][Supported 支持]]
[[GCC 4.2   ][Linux     ][Supported 支持]]
[[ICC 8.0   ][Linux     ][Supported 支持]]
[[ICC 9.0   ][Linux     ][Supported 支持]]
[[ICC 9.1   ][Linux     ][Supported 支持]]
[[GCC 4.2   ][Linux     ][Supported 支持]]
[[GCC 4.2   ][Linux     ][Supported 支持]]
[[VS 7.1    ][Windows   ][Supported 支持]]
[[VS 8.0    ][Windows   ][Supported 支持]]
[[ICC 7.1   ][Windows   ][Not Supported 不支持]]
[[ICC 8.0   ][Windows   ][Supported 支持]]
[[ICC 9.1   ][Windows   ][Supported 支持]]
[[CW 8.3    ][Windows   ][Not Supported 不支持]]
]

[/
[[Comeau C++][          ][Not yet tested (Will be supported)  ]]
[[CW 8.3    ][Windows   ][On going effort to support it       ]]
]

[h2 VS 7.1]

If a .cpp file uses more than four differents bimaps the compiler will run
out of symbols and issue an internal compiler error. The official solution
in msdn is to split the .cpp in several files or upgrade your compiler.\n
如果一个 .cpp 文件使用了四个以上不同的 bimap，编译器会将符号用完并产生一个内部编译错误。
官方的解决方法是，将该 .cpp 文件分割为多个文件，或者升级你的编译器。

[h2 VS 8.0]

VC++ 8.0 warns on usage of certain Standard Library and API functions that
can be cause buffer overruns or other possible security issues if misused.
See http://msdn.microsoft.com/msdnmag/issues/05/05/SafeCandC/default.aspx
But the wording of the warning is misleading and unsettling, there are no
portable alternative functions, and VC++ 8.0's own libraries use the
functions in question. In order to turn off the warnings add the followings
defines at the begging of your .cpp files:\n
VC++ 8.0 会警告在使用当前的标准库和API函数时，误用会导致缓冲区溢出或其它可能的安全问题。
请看 http://msdn.microsoft.com/msdnmag/issues/05/05/SafeCandC/default.aspx，不过该警告的用语容易令人误解，
也未详细说明，没有可移植的其它函数，且 VC++ 8.0 自己本身的库也使用了有问题的函数。
要关闭这些警告，要在你的 .cpp 文件中加入以下定义：

    #define _CRT_SECURE_NO_DEPRECATE
    #define _SCL_SECURE_NO_DEPRECATE

[endsect]