
[/ Copyright 2005-2008 Daniel James.
 / Distributed under the Boost Software License, Version 1.0. (See accompanying
 / file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt) ]

[section:intro Introduction 简介]

[def __tr1-full__
    [@http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2005/n1836.pdf
    Draft Technical Report on C++ Library Extensions]]
[def __tr1__
    [@http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2005/n1836.pdf
    TR1]]
[def __unordered__ [link unordered Boost.Unordered]]
[def __intrusive__ [link intrusive.unordered_set_unordered_multiset Boost.Intrusive]]
[def __multi-index__ [@boost:/libs/multi_index/doc/index.html
    Boost Multi-Index Containers Library]]
[def __multi-index-short__ [@boost:/libs/multi_index/doc/index.html
    Boost.MultiIndex]]
[def __bimap__ [@boost:/libs/bimap/index.html Boost.Bimap]]
[def __issues__
    [@http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2005/n1837.pdf
    Library Extension Technical Report Issues List]]
[def __hash-function__ [@http://en.wikipedia.org/wiki/Hash_function hash function]]
[def __hash-table__ [@http://en.wikipedia.org/wiki/Hash_table hash table]]

[classref boost::hash] is an implementation of the __hash-function__ object
specified by the __tr1-full__ (TR1). It is the default hash function for
__unordered__, __intrusive__'s unordered associative containers, and
__multi-index-short__'s hash indicies and __bimap__'s `unordered_set_of`.\n
[classref boost::hash] 是 __tr1-full__ (TR1) 规范的 __hash-function__ 对象的一个实现。
它是 __unordered__, __intrusive__ 的无序关联式容器，__multi-index-short__ 的散列索引，
以及 __bimap__ 的 `unordered_set_of` 的缺省散列函数。

As it is compliant with __tr1__, it will work with:\n
因为它遵循 __tr1__，所以它可以和以下类型一起工作：

* integers 整数
* floats 浮点数
* pointers 指针
* strings 字符串

It also implements the extension proposed by Peter Dimov in issue 6.18 of the
__issues__ (page 63), this adds support for:\n
它也实现了 Peter Dimov 在 __issues__（第 63 页）中的 issue 6.18 提议的扩展，
这就提供了对以下各项的支持：

* arrays 数组
* `std::pair`
* the standard containers. 标准容器
* extending [classref boost::hash] for custom types. 为定制类型扩展 [classref boost::hash]

[endsect]

