
[/ Copyright 2005-2008 Daniel James.
 / Distributed under the Boost Software License, Version 1.0. (See accompanying
 / file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt) ]

[section:changes Change Log 变更日志]

[h2 Boost 1.33.0]

* Initial Release\n
  最初版本

[h2 Boost 1.33.1]

* Fixed the points example, as pointed out by 沈慧峰.\n
  修复由沈慧峰指出的指针实例。

[h2 Boost 1.34.0]

* Use declarations for standard classes, so that the library
  doesn't need to include all of their headers\n
  为标准类使用声明，以便库不再需要包含所有的头文件。
* Deprecated the `<boost/functional/hash/*.hpp>` headers. Now a single header,
  <[headerref boost/functional/hash.hpp]> is used.\n
  不赞成使用 `<boost/functional/hash/*.hpp>` 头文件。使用单独的头文件 <[headerref boost/functional/hash.hpp]>。
* Add support for the `BOOST_HASH_NO_EXTENSIONS` macro, which
  disables the extensions to TR1.\n
  增加对 `BOOST_HASH_NO_EXTENSIONS` 宏的支持，它可以使对 TR1 的扩展无效。
* Minor improvements to the hash functions for floating point numbers.\n
  浮点数的散列函数的小幅度改进。 
* Update the portable example to hopefully be more generally portable.\n
  更新可移植的示例，但愿能更广泛地一致。

[h2 Boost 1.34.1]

* [@http://svn.boost.org/trac/boost/ticket/952 Ticket 952]:
  Suppress incorrect 64-bit warning on Visual C++.\n
  [@http://svn.boost.org/trac/boost/ticket/952 Ticket 952]：消除 Visaul C++ 上不正确的 64 位警告。

[h2 Boost 1.35.0]

* Support for `long long`, `std::complex`.\n
  为 `long long`, `std::complex` 提供支持。
* Improved algorithm for hashing floating point numbers:\n
  改进散列浮点数的算法：
  * Improved portablity, as described by Daniel Krügler in
    [@http://lists.boost.org/boost-users/2005/08/13418.php
    a post to the boost users list].\n
    改进可移植性，就像 Daniel Krügler 在 [@http://lists.boost.org/boost-users/2005/08/13418.php
    给boost用户列表的一篇帖子] 中描述的一样。
  * Fits more information into each combine loop, which can reduce the
    the number of times combine is called and hopefully give a better
    quality hash function.\n
    在每次结合循环中装入更多信息，这样就能减少调用结合的次数并有望得到一个品质更好的散列函数。
  * Improved the algorithm for hashing floating point numbers.\n
    改进散列浮点数的算法。
  * On Cygwin use a binary hash function for floating point numbers, as 
    Cygwin doesn't have decent floating point functions for `long double`.\n
    在 Cygwin 中为浮点数使用一个二元的散列函数，因为 Cygwin 没有适宜的针对 `long double` 的浮点机能。
  * Never uses `fpclass` which doesn't support `long double`.\n
    不再使用不支持 `long double` 的 `fpclass`。
  * [@http://svn.boost.org/trac/boost/ticket/1064 Ticket 1064]:
    Removed unnecessary use of `errno`.\n
    [@http://svn.boost.org/trac/boost/ticket/1064 Ticket 1064]：移除了不必要的 `errno` 的使用。
* Explicitly overload for more built in types.\n
  针对更多内建类型的显示重载。
* Minor improvements to the documentation.\n
  文档中的小规模改进。
* A few bug and warning fixes:\n
  修改少数 bug 和警告：
  * [@http://svn.boost.org/trac/boost/ticket/1509 Ticket 1509]:\n
    Suppress another Visual C++ warning.
    [@http://svn.boost.org/trac/boost/ticket/1509 Ticket 1509]：消除其它 Visual C++ 警告。
  * Some workarounds for the Sun compilers.\n
    针对 Sun 编译器的一些 workarounds。

[h2 Boost 1.36.0]

* Stop using OpenBSD's dodgy `std::numeric_limits`.\n
  停止使用 OpenBSD 的不可靠的 `std::numeric_limits`。
* Using the boost typedefs for `long long` and `unsigned long long`.\n
  为 `long long` 和 `unsigned long long` 使用 boost typedefs。
* Move the extensions into their own header.\n
  将扩展移入它们自己的头文件。

[h2 Boost 1.37.0]

* [@http://svn.boost.org/trac/boost/ticket/2264 Ticket 2264]:
  In Visual C++, always use C99 float functions for `long double` and `float` as
  the C++ overloads aren't always availables.\n
  [@http://svn.boost.org/trac/boost/ticket/2264 Ticket 2264]: 在 Visual C++ 中，
  对于 `long double` 和 `float` 总是使用C99浮点函数，因为C++重载不总是可用的。

[h2 Boost 1.38.0]

* Changed the warnings in the deprecated headers from 1.34.0 to errors. These
  will be removed in a future version of Boost.\n
  将1.34.0起不再使用的头文件，由告警改为错误。在未来的Boost版本中，这些头文件将被去掉。
* Moved detail headers out of `boost/functional/detail`, since they are part of
  functional/hash, not functional. `boost/functional/detail/container_fwd.hpp`
  has been moved to `boost/detail/container_fwd.hpp` as it's used outside of
  this library, the others have been moved to `boost/functional/hash/detail`.\n
  将实现细节的头文件移出 `boost/functional/detail`，因为它们是 functional/hash 而不是 functional 的一部分。
  `boost/functional/detail/container_fwd.hpp` 被移至 `boost/detail/container_fwd.hpp`，
  由于它在本库之外使用，其它文件则被移至 `boost/functional/hash/detail`.
  
[h2 Boost 1.39.0]

* Move the hash_fwd.hpp implementation into the hash subdirectory, leaving a
  forwarding header in the old location. You should still use the old location,
  the new location is mainly for implementation and possible modularization.\n
  将 hash_fwd.hpp 的实现移至 hash 子目录，在原目录处保留一个前向头文件。
  你应该仍旧使用原目录，新的目录主要用于实现，并有可能会变动。
* [@https://svn.boost.org/trac/boost/ticket/2412 Ticket 2412]: Removed deprecated
  headers.\n
  [@https://svn.boost.org/trac/boost/ticket/2412 Ticket 2412]: 移除不再使用的头文件。
* [@https://svn.boost.org/trac/boost/ticket/2957 Ticket 2957]: Fix configuration
  for vxworks.\n
  [@https://svn.boost.org/trac/boost/ticket/2957 Ticket 2957]: 修正用于 vxworks 的配置。

[h2 Boost 1.40.0]

* Automatically configure the float functions using template metaprogramming
  instead of trying to configure every possibility manually.\n
  使用模板元编程来完成浮点函数的自动配置，代替原先手工尝试配置各种可能性。
* Workaround for when STLport doesn't support long double.\n
  当 STLport 不支持 long double 时的变通方法。

[endsect]
