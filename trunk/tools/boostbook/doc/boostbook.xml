<?xml version="1.0" encoding="utf-8"?>
<!--
   Copyright (c) 2002 Douglas Gregor <doug.gregor -at- gmail.com>
  
   Distributed under the Boost Software License, Version 1.0.
   (See accompanying file LICENSE_1_0.txt or copy at
   http://www.boost.org/LICENSE_1_0.txt)
  -->
<!DOCTYPE part PUBLIC "-//Boost//DTD BoostBook XML V1.0//EN"
  "http://www.boost.org/tools/boostbook/dtd/boostbook.dtd">
<part xmlns:xi="http://www.w3.org/2001/XInclude" id="boostbook"
     last-revision="$Date: 2009-07-30 02:10:36 -0400 (Thu, 30 Jul 2009) $">
  <partinfo>
    <author>
      <firstname>Douglas</firstname>
      <surname>Gregor</surname>
    </author>
    
    <copyright>
      <year>2003</year>
      <year>2004</year>
      <year>2005</year>
      <holder>Douglas Gregor</holder>
    </copyright>

    <legalnotice>
      <para>Distributed under the Boost Software License, Version 1.0.
      (See accompanying file LICENSE_1_0.txt or copy at
      <ulink url="http://www.boost.org/LICENSE_1_0.txt">http://www.boost.org/LICENSE_1_0.txt</ulink>).
      </para>
    </legalnotice>
  </partinfo>

  <title>The BoostBook Documentation Format</title>

  <chapter id="boostbook.introduction">
    <title>Introduction 简介</title>
   
    <para>The BoostBook documentation format is an extension of <ulink
    url="http://www.docbook.org">DocBook</ulink>, an SGML- or
    XML-based format for describing documentation. BoostBook augments
    DocBook with semantic markup that aids in the documentation of C++
    libraries, specifically the <ulink
    url="http://www.boost.org">Boost C++ libraries</ulink>, by
    providing the ability to express and refer to C++ constructs such
    as namespaces, classes, overloaded functions, templates, and
    specializations.<sbr/>
    BoostBook 文档格式是 <ulink url="http://www.docbook.org">DocBook</ulink> 
    的一种扩展，后者是一种用于描述性文档的基于 SGML 或 XML 的格式。
    BoostBook 比 DocBook 增加了语义标记，有助于编写 C++ 库的文档，尤其是 
    <ulink url="http://www.boost.org">Boost C++ 库</ulink>，它提供了表示和引用象名字空间、
    类、函数重载、模板和特化等 C++ 结构的能力。</para>

    <para>
    BoostBook offers additional features more specific to its use for
    documenting the <ulink url="http://www.boost.org">Boost C++
    libraries</ulink>. These features are intended to eliminate or
    reduce the need for duplication of information and to aid in
    documenting portions of Boost that might otherwise not be
    documented. Examples of Boost-centric features include:<sbr/>
    BoostBook 提供了额外的特性，更加专注于 <ulink url="http://www.boost.org">Boost C++ 库</ulink>的文档编写。
    这些特性的目的是消除或减少重复的信息，并有助于将未文档化的 Boost 部分进行文档化。Boost-专用的特性包括有：
      <itemizedlist>
        <listitem>
          <para><emphasis role="bold">Testsuites</emphasis>:
          Testsuites in Boost are created by writing an appropriate
          Jamfile and including that Jamfile in
          <filename>status/Jamfile</filename>. If the testsuites are
          documented (<ulink
          url="http://www.boost.org/libs/multi_array/doc/test_cases.html">as
          in the MultiArray library</ulink>), the documentation is
          maintained separately from the testcase Jamfile, leading to
          duplication of information and the possibility of having the
          documentation out of sync with the Jamfile. BoostBook
          contains elements that describe a testsuite for both
          purposes: the BoostBook stylesheets can generate
          documentation for the testcases and also generate an
          appropriate Jamfile to integrate the testcases with the
          regression testing system.<sbr/>
          <emphasis role="bold">测试套件</emphasis>：Boost 中的测试套件是通过编写一个合适的 
          Jamfile 并将该 Jamfile 包含在 <filename>status/Jamfile</filename> 中来创建的。
          如果测试套件已经文档化(<ulink url="http://www.boost.org/libs/multi_array/doc/test_cases.html">
          象在 MultiArray 库中</ulink>)，则这些文档的维护是独立于测试案例 Jamfile 的，
          这导致了信息的重复，还可能使得文档与 Jamfile 不同步。BoostBook 包含了描述一个测试套的各种元素，
          有两种目的：BoostBook stylesheets 可以为测试案例生成文档，也可以生成一个适合的 
          Jamfile 来将测试案例与回归测试系统相集成。</para>
        </listitem>
        <listitem>
          <para><emphasis role="bold">Example programs</emphasis>:
          Example programs in documentation need to be duplicated in
          testcases to ensure that the examples compile and execute
          correctly. Keeping the two copies in sync is a tedious and
          error-prone task. For instance, the following code snippet
          persisted for six months:<sbr/>
          <para><emphasis role="bold">示例程序</emphasis>：在文档中的示例程序需要在测试案例中重复，
          以确保这些例子被正确地编译和执行。保持两份拷贝的同步是一件乏味而易错的工作。
          例如，以下代码片断被保留了六个月：</para>
<programlisting>
std::cout &lt;&lt; f(5, 3) &gt;&gt; std::endl;
</programlisting>
          <para>The BoostBook format allows testcases to be generated
          by weaving together program fragments from example programs
          in the documentation. This capability is integrated with
          testsuite generation so that example programs are normal
          tests in BoostBook.<sbr/>
          BoostBook 格式可以通过组合多个程序片断，从文档中的示例程序生成测试案例。
          这一能力被集成到测试套件的生成当中，这样在 BoostBook 中的示例程序就可以进行正常的测试。</para>
        </listitem>
      </itemizedlist>
    </para>
  </chapter>

  <chapter id="boostbook.getting.started">
    <title>Getting Started 入门</title>

    <para>To use the Boost documentation tools, you will need several tools:<sbr/>
    要使用 Boost 文档工具，你需要以下几个工具：</para>
    <itemizedlist>
      <listitem><simpara><command>xsltproc</command>:</simpara>
        <itemizedlist>
          <listitem>Windows with <ulink
                       url="http://www.cygwin.com/">Cygwin</ulink>: select the libxml2 and libxslt packages.<sbr/>
                       带 <ulink
                       url="http://www.cygwin.com/">Cygwin</ulink> 的 Windows ：选择 libxml2 和 libxslt 包。</listitem>
          <listitem>Windows without Cygwin: Download the <ulink url="http://www.zlatkovic.com/pub/libxml/">binary packages</ulink>
            from Igor Zlatkovic. At the very least, you'll need iconv, zlib, libxml2 and libxslt.<sbr/>
            不带 Cygwin 的 Windows：从 lgor Zlakovic 下载 <ulink url="http://www.zlatkovic.com/pub/libxml/">二进制包</ulink>。
            主要的一点，你需要 iconv, zlib, libxml2 和 libxslt.</listitem>
          <listitem>Mac OS X with Fink: Get the <code>libxslt</code> package.<sbr/>
          带 Fink 的 Mac OS X：获取 <code>libxslt</code> 包。</listitem>
          <listitem>Mac OS X without Fink: <ulink url="http://www.zveno.com/open_source/libxml2xslt.html">Download the libxslt binaries</ulink><sbr/>
          不带 Fink 的 Mac OS X：<ulink url="http://www.zveno.com/open_source/libxml2xslt.html">下载 libxslt 的二进制文件</ulink></listitem>
          <listitem>Any platform: <ulink
                                     url="http://xmlsoft.org/XSLT/">libxslt source</ulink>.<sbr/>
                                     任意平台：<ulink
                                     url="http://xmlsoft.org/XSLT/">libxslt 源文件</ulink>。 </listitem>
        </itemizedlist>
      </listitem>
        <listitem><simpara><command>doxygen</command>:</simpara> Available from <ulink url="http://www.doxygen.org">http://www.doxygen.org</ulink><sbr/>
        从 <ulink url="http://www.doxygen.org">http://www.doxygen.org</ulink> 获得</listitem>
    </itemizedlist>

    <section id="boostbook.setup.autounix">
      <title>Automatic setup for Unix-like systems 类Unix系统上的自动设置</title>
            
      <para>BoostBook provides a nearly-automatic setup script. Once
      you have downloaded and
      installed <command>xsltproc</command>, <command>doxygen</command>,
      and (optionally) <command>java</command>, the setup script can
      download the required DocBook stylesheets, DocBook DTD, and
      (when Java is enabled) Apache FOP for PDF output. It will then
      configure Boost.Build version 2 to build BoostBook
      documentation.<sbr/>
      BoostBook 提供了几乎是自动化的设置脚本。在你下载并安装完成 <command>xsltproc</command>, 
      <command>doxygen</command>, 还有(可选的) <command>java</command> 后，设置脚本就可以下载所需的 
      DocBook stylesheets, DocBook DTD, 和(如果 Java 是可用的)用于 PDF 输出的 Apache FOP。
      然后它将配置 Boost.Build V2 以构建 BoostBook 文档。</para>
      
      <para>The script requires: <command>sh</command>,
      <command>curl</command> and <command>gunzip</command>.
      To perform the installation, execute the
      script <command>tools/boostbook/setup_boostbook.sh</command>
      from a directory where you would like the resulting XSL, DTD,
      and Apache FOP installations to occur. <sbr/>
      该脚本需要：<command>sh</command>, <command>curl</command> 和 <command>gunzip</command>。
      要进行这个安装，请从一个你想要存放最终的 XSL, DTD 和 Apache FOP 安装的目录下执行脚本 
      <command>tools/boostbook/setup_boostbook.sh</command>。</para>
    </section>

    <section id="boostbook.setup.manual">
      <title>Manual setup for all systems 所有系统上的手动设置</title>
    
      <para>This section describes how to manually configure Boost
      Boost version 2 (BBv@) for BoostBook. If you can use the
      automatic setup script, you should. All configuration will
      happen in the BBv2 user configuration file,
      <filename>user-config.jam</filename>. If you do not have a copy
      of this file in your home directory, you should copy the one
      that resides in <code>tools/build/v2</code> to your home
      directory. Alternatively, you can edit
      <filename>tools/build/v2/user-config.jam</filename> directly or
      a site-wide <filename>site-config.jam</filename> file.<sbr/>
      本节描述了如何为 BoostBook 手工配置 Boost Boost version 2 (BBv@)。如果你可以使用自动脚本，你就应该用它。
      所有配置都出现在 BBv2 的用户配置文件 <filename>user-config.jam</filename> 中。
      如果在你的主目录中没有这个文件的拷贝，你可以从 <code>tools/build/v2</code> 目录中复制一份到你的主目录。
      或者，你也可以直接编辑 <filename>tools/build/v2/user-config.jam</filename> 或是一个 <filename>site-config.jam</filename> 文件。</para>

      <section id="boostbook.setup.xsltproc">
        <title>Configuring <command>xsltproc</command> 配置 <command>xsltproc</command> </title>

        <para>To configure <command>xsltproc</command> manually, you
        will need to add a directive to
        <filename>user-config.jam</filename> telling it where to find
        <command>xsltproc</command>. If the program is in your path,
        just add the following line to
        <filename>user-config.jam</filename>:<sbr/>
        要手工配置 <command>xsltproc</command>，你需要增加一个指示符到 <filename>user-config.jam</filename> 中，
        告诉它在哪里可以找到 <command>xsltproc</command>。如果该程序在你的执行目录中，则只需要增加以下一行到 
        <filename>user-config.jam</filename> 中：</para>

<programlisting>using xsltproc ;</programlisting>

        <para>If <command>xsltproc</command> is somewhere else, use
        this directive, where <code>XSLTPROC</code> is the full
        pathname to <command>xsltproc</command> (including
        <command>xsltproc</command>):<sbr/>
        如果 <command>xsltproc</command> 在其它的地方，请使用以下指示符，其中 <code>XSLTPROC</code> 为 
        <command>xsltproc</command> (包括 <command>xsltproc</command>) 的全路径名：</para>

<programlisting>using xsltproc : XSLTPROC ;</programlisting>
      </section>

      <section id="boostbook.setup.docbook">
        <title>Configuring local DocBook XSL and DTD distributions 配置本地的 DocBook XSL 和 DTD 分发包</title>
 
        <para>This section describes how to configure Boost.Build to
        use local copies of the DocBook DTD and XSL stylesheets to
        improve processing time. You will first need to download two
        packages:<sbr/>
        这一节描述如何配置 Boost.Build 来使用本地的 DocBook DTD 和 XSL stylesheets 来提高处理速度。首先你要下载两个包：

        <itemizedlist>
          <listitem><para>Norman Walsh's DocBook XSL stylesheets,
          available at the <ulink
          url="http://docbook.sourceforge.net">DocBook sourceforge
          site</ulink>. Extract the DocBook XSL stylesheets to a
          directory on your hard disk (which we'll refer to as the
          <code>DOCBOOK_XSL_DIR</code>).<sbr/>
          Norman Walsh 的 DocBook XSL stylesheets，在 <ulink url="http://docbook.sourceforge.net">
          DocBook sourceforge site</ulink> 站点。将该 DocBook XSL stylesheets 解压到你硬盘上的某个目录
          (我们将称之为 <code>DOCBOOK_XSL_DIR</code>)。</para>
          </listitem>

          <listitem><para>The DocBook DTD, available as a ZIP archive
          at the <ulink
          url="http://www.oasis-open.org/docbook/xml/4.2/">OASIS
          DocBook site</ulink>. The package is called "DocBook XML
          4.2". Extract the DocBook DTD to a directory on your hard
          disk (which we'll refer to as the
          <code>DOCBOOK_DTD_DIR</code>). You will want to extract this
          archive in a subdirectory!<sbr/>
          DocBook DTD, 它是一个 ZIP 存档，在 <ulink
          url="http://www.oasis-open.org/docbook/xml/4.2/">OASIS DocBook 站点</ulink>。
          该包称为 "DocBook XML 4.2"。将该 DocBook DTD 解压到你硬盘上的某个目录(我们将称之为 
          <code>DOCBOOK_DTD_DIR</code>)。你应该将该存档解压到一个子目录下！
</para></listitem>
        </itemizedlist>
        </para>

        <para>Add the following directive telling BBv2 where to find
        the DocBook DTD and XSL stylesheets:<sbr/>
        增加以下指示符，告诉 BBv2 在哪里可以找到 DocBook DTD 和 XSL stylesheets：</para>

        <programlisting>#  BoostBook configuration
using boostbook 
  : DOCBOOK_XSL_DIR
  : DOCBOOK_DTD_DIR
  ;</programlisting>

        <para>Whenever you change this directive, you will need to
        remove the <code>bin.v2</code> directory that BBv2 generates.
        This is due to longstanding bug we are trying to fix.<sbr/>
        如果你修改了这个指示符，你就需要删除由 BBv2 生成的 <code>bin.v2</code> 目录。
        这是一个已经存在很长时间的 bug，我们正在努力修复它。</para>

        <para>At this point, you should be able to build HTML
        documentation for libraries that do not require Doxygen. To
        test this, change into the directory <filename
        class="directory">$BOOST_ROOT/libs/function/doc</filename> and
        run the command <code>bjam --v2</code>: it should produce HTML
        documentation for the Boost.Function library in the
        <code>html</code> subdirectory.<sbr/>
        到此为止，你应该可以为各个不需要 Doxygen 的库构建 HTML 文档了。要测试一下它，请转至 <filename
        class="directory">$BOOST_ROOT/libs/function/doc</filename> 目录，运行命令 <code>bjam --v2</code>: 
        它会为 Boost.Function 库生成 HTML 文档并保存在 <code>html</code> 子目录下。</para>
      </section>

      <section id="boostbook.setup.doxygen">
        <title>Configuring Doxygen for Documentation Extraction 为文档提取配置 Doxygen</title>
 
        <para>Doxygen is required to build the documentation for
        several Boost libraries. You will need a recent version of
        <ulink url="http://www.doxygen.org">Doxygen</ulink> (most of
        the 1.3.x and 1.4.x versions will suffice). BBv2 by adding the
        following directive to
        <filename>user-config.jam</filename>:<sbr/>
        有几个 Boost 库的文档要用 Doxygen 构建。你需要较新版本的 <ulink url="http://www.doxygen.org">Doxygen</ulink> 
        (多数 1.3.x 和 1.4.x 版本都可以)。增加以下指示符到 BBv2 的 <filename>user-config.jam</filename>:</para>

        <programlisting>using doxygen : DOXYGEN ;</programlisting>

        <para><filename>DOXYGEN</filename> should be replaced with the
        name of the <command>doxygen</command> executable (with full
        path name). If the right <command>doxygen</command> executable
        can be found via the path, this parameter can be
        omitted, e.g.<sbr/>
        <filename>DOXYGEN</filename> 应被替换为 <command>doxygen</command> 可执行文件的名字(带全路径名)。
        如果可以在执行路径中找到正确的 <command>doxygen</command> 可执行文件，该参数可以忽略，如：</para>

        <programlisting>using doxygen ;</programlisting>
      
        <important>
          <para>The relative order of declarations in
          <filename>user-config.jam</filename> /
          <filename>site-config.jam</filename> files is
          significant. In particular, the <literal>using
          doxygen</literal> line should come
          <emphasis>after</emphasis> the <literal>using
          boostbook</literal> declaration.<sbr/>
          在 <filename>user-config.jam</filename> /
          <filename>site-config.jam</filename> 文件中的声明的相对顺序是很重要的。
          特别是，<literal>using doxygen</literal> 行应在 <literal>using boostbook</literal> 声明之后。
          </para>
        </important>
      </section>

      <section id="boostbook.setup.fop">
      <title>Configuring Apache FOP 配置 Apache FOP</title>

      <para>In order to generate PDF and PostScript output using
      Apache FOP, you will need a <ulink
      url="http://java.sun.com">Java interpreter</ulink> and <ulink
      url="http://xml.apache.org/fop/download.html">Apache FOP</ulink>
      (version 0.20.5 is best). Unpack Apache FOP to some
      directory. The top level directory of the FOP tool should
      contain a main script called <filename>fop.sh</filename> on Unix
      and <filename>fop.bat</filename> on Windows. You need to specify
      the location of that script and Java location to
      Boost.Build. Add the following to your
      <filename>user-config.jam</filename> or
      <filename>site-config.jam</filename>:<sbr/>
      为了使用 Apache FOP 生成 PDF 和 PostScript 输出，你需要一个 <ulink
      url="http://java.sun.com">Java 解释器</ulink> 和 <ulink
      url="http://xml.apache.org/fop/download.html">Apache FOP</ulink> (最好是版本 0.20.5)。
      将 Apache FOP 解包到某个目录。FOP 工具的顶层目录应包含一个主脚本，在 Unix 中名为 
      <filename>fop.sh</filename>，在 Windows 中则名为 <filename>fop.bat</filename>。
      你需要对 Boost.Build 指明该脚本的位置和 Java 的位置。增加以下行到你的 
      <filename>user-config.jam</filename> 或 <filename>site-config.jam</filename>: 
<programlisting>
using fop : FOP_COMMAND 
          : JAVA_HOME 
          ;
</programlisting> replacing
      <code>FOP_COMMAND</code> with the full path to the FOP main script, and
      replacing <code>JAVA_HOME</code> with the directory where Java is
      installed. If the <envar>JAVA_HOME</envar> environment variable is
      already set, you don't need to specify it above.<sbr/>
      将 <code>FOP_COMMAND</code> 替换为 FOP 主脚本的全路径，再将 <code>JAVA_HOME</code> 替换为安装 Java 的目录。
      如果已经设置了 <envar>JAVA_HOME</envar> 环境变量，你就不需要再指定它了。
      </para>
    
      <para>
        Proper generation of images in PDFs depends on the <ulink
        url="http://java.sun.com/products/jimi/#">Jimi Image
        Library</ulink>.  To get FOP to use Jimi, extract the
        <filename>JimiProClasses.zip</filename> file from the Jimi SDK
        and rename it—if on Windows, to
        <filename>jimi-1.0.jar</filename>, or if on *nix, to
        <filename>JimiProClasses.jar</filename>—and place it in the
        <filename>lib/</filename> subdirectory of your FOP
        installation.<sbr/>
        PDF 中的图象的正确生成要依靠 <ulink
        url="http://java.sun.com/products/jimi/#">Jimi 图象库</ulink>。
        要让 FOP 使用 Jimi，请从 Jimi SDK 中解压 <filename>JimiProClasses.zip</filename> 
        文件并改名—对于 Windows 改为 <filename>jimi-1.0.jar</filename>，对于 *nix 则改为 
        <filename>JimiProClasses.jar</filename>—并将它放在你的 FOP 安装下的 <filename>lib/</filename> 子目录。
      </para>

      <para>To test PDF generation, switch to the directory <filename
      class="directory">$BOOST_ROOT/libs/function/doc</filename> and
      execute the command <command>bjam --v2 pdf</command>. In the
      absence of any errors, Apache FOP will be executed to transform
      the XSL:FO output of DocBook into a PDF file.<sbr/>
      要测试 PDF 的生成，请转至 <filename
      class="directory">$BOOST_ROOT/libs/function/doc</filename> 目录并执行命令 <command>bjam --v2 pdf</command>。
      如果一切正常，Apache FOP 将会执行并将 DocBook 的 XSL:FO 输出转换为 PDF 文件。</para>
    </section>
  </section>

  <section id="boostbook.setup.running">
    <title>Running BoostBook 运行 BoostBook</title>

    <para>Once BoostBook has been configured, we can build some
    documentation. First, change to the directory
    <code>$BOOST_ROOT/doc</code> and remove (or make writable) the
    <code>.html</code> files in
    <code>$BOOST_ROOT/doc/html</code>. Then, run <code>bjam
    --v2</code> to build HTML documentation. You should see several
    warnings like these while DocBook documentation is being built
    from BoostBook documentation:<sbr/>
    一旦完成 BoostBook 的配置，我们就可以来构建一些文档了。首先，转至 <code>$BOOST_ROOT/doc</code> 
    目录并删除(或使之可写)在 <code>$BOOST_ROOT/doc/html</code> 中的 <code>.html</code> 文件。
    然后，运行 <code>bjam --v2</code> 来构建 HTML 文档。在从 BoostBook 文档构建 DocBook 文档过程中，你会看到如下一些警告：</para>

    <programlisting>Cannot find function named 'checked_delete'
Cannot find function named 'checked_array_delete'
Cannot find function named 'next'</programlisting>

    <para>These warnings are emitted when the Boost documentation
    tools cannot find documentation for functions, methods, or classes
    that are referenced in the source, and are not harmful in any
    way. Once Boost.Jam has completed its execution, HTML
    documentation for Boost will be available in
    <code>$BOOST_ROOT/doc/html</code>. You can also create HTML
    documentation in a single (large!) HTML file with the command line
    <code>bjam --v2 onehtml</code>, or Unix man pages with the command
    line <code>bjam --v2 man</code>. The complete list of output
    formats is listed in <xref
    linkend="boostbook.output.formats"/>. Several output formats can
    be passed to a single invocation of <code>bjam</code>, e.g.,
    <code>bjam --v2 html man docbook</code> would generate HTML
    (multiple files), man pages, and DocBook documentation.<sbr/>
    这些警告是在 Boost 文档工具找不到源文件中某些函数、方法或类的文档时产生的，它们没有什么危害。
    当 Boost.Jam 完成执行后，Boost 的 HTML 文档将被放在 <code>$BOOST_ROOT/doc/html</code> 目录中。
    你也可以用命令行 <code>bjam --v2 onehtml</code> 来生成单个(巨大的!) HTML 文件，或者用命令行 
    <code>bjam --v2 man</code> 来生成 Unix man 页。完成的输出格式列表请见 <xref
    linkend="boostbook.output.formats"/>。可以在对 <code>bjam</code> 的一次调用中生成多种输出格式，如 
    <code>bjam --v2 html man docbook</code> 将同时生成 HTML (多文件), man 页和 DocBook 文档。</para>
   
    <table id="boostbook.output.formats">
      <title>BoostBook Output Formats</title>
      <tgroup cols="2">
        <thead>
          <row><entry>Format 格式</entry><entry>Description 说明</entry></row>
        </thead>
        <tbody> 
          <row>
            <entry>html</entry>
            <entry><simpara>HTML output (multiple files). This is the default<sbr/>
            HTML 输出(多文件)。这是缺省值。</simpara></entry>
          </row>
          <row>
            <entry>onehtml</entry>
            <entry><simpara>HTML output in a single HTML file.<sbr/>
            单个 HTML 文件的 HTML 输出。</simpara></entry>
          </row>
          <row>
            <entry>man</entry>
            <entry><simpara>Unix man pages.<sbr/>
            Unix man 页。</simpara></entry>
          </row>
          <row>
            <entry>pdf</entry>
            <entry><simpara>PDF. Requires <ulink url="http://xml.apache.org/fop/index.html">Apache FOP</ulink>.<sbr/>
            PDF. 需要 <ulink url="http://xml.apache.org/fop/index.html">Apache FOP</ulink>.</simpara></entry>
          </row>
          <row>
            <entry>ps</entry>
            <entry><simpara>Postscript. Requires <ulink url="http://xml.apache.org/fop/index.html">Apache FOP</ulink>.<sbr/>
            Postscript. 需要 <ulink url="http://xml.apache.org/fop/index.html">Apache FOP</ulink>.</simpara></entry>
          </row>
          <row>
            <entry>docbook</entry>
            <entry><ulink url="http://www.docbook.org/">DocBook</ulink>.</entry>
          </row>
          <row>
            <entry>fo</entry>
            <entry><ulink url="http://www.w3.org/TR/xsl/">XSL Formatting Objects</ulink></entry>
          </row>
        </tbody> 
      </tgroup>
    </table>
    </section>

    <section id="boostbook.setup.troubleshooting">
      <title>Troubleshooting 疑难解答</title>
    
      <para>The Boost documentation tools are still in their early phase of 
      development, and some things don't work as seamlessly as we would like 
      them to, yet. In particular, error messages can be somewhat 
      uninformative at times. If you find yourself in the situation when 
      you have double checked everything, and yet things still don't work as 
      expected, consider helping the tools by deleting 
      <literal>bin.v2</literal> build directory.<sbr/>
      Boost 文档工具仍然只是处于开发的早期阶段，有些事情还不是象我们希望的那样无缝工作。
      特别是，有时的错误信息毫无意义。如果你发现这种情况，并经过反复检查后依然无法正常使用，
      可以考虑通过删除 <literal>bin.v2</literal> 构建目录来帮这些工具一把。
      </para>
 
    </section>
  </chapter>
    
  <xi:include href="documenting.xml"/>
  <xi:include href="together.xml"/>
  <xi:include href="reference.xml"/>
</part>
