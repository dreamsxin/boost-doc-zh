[/ 
  Copyright 2006-2007 John Maddock.
  Distributed under the Boost Software License, Version 1.0.
  (See accompanying file LICENSE_1_0.txt or copy at
  http://www.boost.org/LICENSE_1_0.txt).
]


[section:regex_traits regex_traits]

   namespace boost{

   template <class charT, class implementationT = sensible_default_choice>
   struct regex_traits : public implementationT
   {
      regex_traits() : implementationT() {}
   };

   template <class charT>
   struct c_regex_traits;

   template <class charT>
   class cpp_regex_traits;

   template <class charT>
   class w32_regex_traits;

   } // namespace boost

[h4 Description 说明]

The class `regex_traits` is just a thin wrapper around an actual implemention 
class, which may be one of:\n
类 `regex_traits` 只是实际实现类(可能是下面之一)的一个很薄的外覆：

* `c_regex_traits`: this class is deprecated, it wraps the C locale, and is used as the default implementation when the platform is not Win32, and the C++ locale is not available.\n
  `c_regex_traits`: 这个类建议不要使用，它包装了 C 的 locale，作为非 Win32 平台，并且 C++ locale 不存在时的默认实现。
* `cpp_regex_traits`: the default traits class for non-Win32 platforms, allows the regex class to be imbued with a std::locale instance.\n
  `cpp_regex_traits`: 非 Win32 平台的特性类，允许 regex 类使用 std::locale 实例。
* `w32_regex_traits`: the default traits class implementation on Win32 platforms, allows the regex class to be imbued with an LCID.\n
  `w32_regex_traits`: Win32 平台的默认特性类实现，允许 regex 类使用 LCID (区域设置ID)。

The default behavior can be altered by defining one of the following 
configuration macros in 
[@../../../../boost/regex/user.hpp boost/regex/user.hpp]\n
默认行为可以通过定义 [@../../../../boost/regex/user.hpp boost/regex/user.hpp] 文件中的配置宏改变：

* BOOST_REGEX_USE_C_LOCALE: makes `c_regex_traits` the default.\n
  BOOST_REGEX_USE_C_LOCALE: 令 `c_regex_traits` 为缺省值。
* BOOST_REGEX_USE_CPP_LOCALE: makes `cpp_regex_traits` the default.\n
  BOOST_REGEX_USE_CPP_LOCALE: 令 `cpp_regex_traits` 为缺省值。

All these traits classes fulfil the 
[link boost_regex.ref.concepts.traits_concept traits class requirements].\n
所有的特性类都满足 [link boost_regex.ref.concepts.traits_concept traits类的需求]。 
     
[endsect]

