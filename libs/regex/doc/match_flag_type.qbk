[/ 
  Copyright 2006-2007 John Maddock.
  Distributed under the Boost Software License, Version 1.0.
  (See accompanying file LICENSE_1_0.txt or copy at
  http://www.boost.org/LICENSE_1_0.txt).
]

[section:match_flag_type match_flag_type]

The type `match_flag_type` is an implementation specific bitmask type 
(see C++ std 17.3.2.1.2) that controls how a regular expression is 
matched against a character sequence.  The behavior of the format 
flags is described in more detail in the 
[link boost_regex.format format syntax guide].\n
`match_flag_type` 类型是实现相关的位掩码类型(参见C++ std 17.3.2.1.2)，用来控制正则表达式如何匹配字符序列。 
格式标签的行为在 [link boost_regex.format 格式化语法指南] 中详细介绍。

   namespace boost{ namespace regex_constants{

   typedef implemenation-specific-bitmask-type match_flag_type;

   static const match_flag_type match_default = 0;
   static const match_flag_type match_not_bob;
   static const match_flag_type match_not_eob;
   static const match_flag_type match_not_bol;
   static const match_flag_type match_not_eol;
   static const match_flag_type match_not_bow;
   static const match_flag_type match_not_eow;
   static const match_flag_type match_any;
   static const match_flag_type match_not_null;
   static const match_flag_type match_continuous;
   static const match_flag_type match_partial;
   static const match_flag_type match_single_line;
   static const match_flag_type match_prev_avail;
   static const match_flag_type match_not_dot_newline;
   static const match_flag_type match_not_dot_null;
   static const match_flag_type match_posix;
   static const match_flag_type match_perl;
   static const match_flag_type match_nosubs;
   static const match_flag_type match_extra;

   static const match_flag_type format_default = 0;
   static const match_flag_type format_sed;
   static const match_flag_type format_perl;
   static const match_flag_type format_literal; 

   static const match_flag_type format_no_copy;
   static const match_flag_type format_first_only;
   static const match_flag_type format_all;

   } // namespace regex_constants
   } // namespace boost

[h4 Description 说明]

The type `match_flag_type` is an implementation specific bitmask type 
(see C++ std 17.3.2.1.2). When matching a regular expression against a 
sequence of characters \[first, last) then setting its elements has the 
effects listed in the table below:\n
类型 `match_flag_type` 是实现相关的位掩码类型(见C++ std 17.3.2.1.2)。 
当正则表达式匹配字符序列 \[first, last) 时，标签的作用如下面的表格所列：

[table
[[Element 元素][Effect if set 置位的效果]]
[[match_default][Specifies that matching of regular expressions proceeds without any modification of the normal rules used in ECMA-262, ECMAScript Language Specification, Chapter 15 part 10, RegExp (Regular Expression) Objects (FWD.1)\n
指定正则表达式匹配过程使用未修改过的通常原则，见 ECMA-262, ECMAScript Language Specification, Chapter 15 part 10, RegExp (Regular Expression) Objects (FWD.1)。]]
[[match_not_bob][Specifies that the expressions "\\A" and "\\`" should not match against the sub-sequence \[first,first).\n
指定表达式 "\\A" 和 "\\`" 不匹配子序列 \[first,first)。]]
[[match_not_eob][Specifies that the expressions "\\'", "\\z" and "\\Z" should not match against the sub-sequence \[last,last).\n
指定表达式 "\\'"、"\\z" 和 "\\Z" 不匹配子表达式 \[last,last)。]]
[[match_not_bol][Specifies that the expression "^" should not be matched against the sub-sequence \[first,first).\n
指定表达式 "^" 不匹配子表达式 \[first,first)。]]
[[match_not_eol][Specifies that the expression "$" should not be matched against the sub-sequence \[last,last).\n
指定表达式 "$" 不匹配子序列 \[last,last)。]]
[[match_not_bow][Specifies that the expressions "\\<" and "\\b" should not be matched against the sub-sequence \[first,first).\n
指定表达式 "\\<" 和 "\\b" 不匹配子序列 \[first,first)。]]
[[match_not_eow][Specifies that the expressions "\\>" and "\\b" should not be matched against the sub-sequence \[last,last).\n
指定表达式 "\\>" 和 "\\b" 不匹配子序列 \[last,last)。]]
[[match_any][Specifies that if more than one match is possible then any match is an acceptable result: this will still find the leftmost match, but may not find the "best" match at that position.  Use this flag if you care about the speed of matching, but don't care what was matched (only whether there is one or not).\n
指定如果有多于一个匹配存在，任意匹配都是可接受的结果：仍会寻找最左匹配，但可能不会寻找那个位置的"最佳"匹配。 
只关注匹配速度而不关注匹配什么(只关注是否匹配)时使用这个标签。]]
[[match_not_null][Specifies that the expression can not be matched against an empty sequence.\n
指定表达式不匹配空序列。]]
[[match_continuous][Specifies that the expression must match a sub-sequence that begins at first.\n
指定表达式必须匹配开始处的子序列。]]
[[match_partial][Specifies that if no match can be found, then it is acceptable to return a match \[from, last) such that from!= last, if there could exist some longer sequence of characters \[from,to) of which \[from,last) is a prefix, and which would result in a full match.
This flag is used when matching incomplete or very long texts, see the partial matches documentation for more information.\n
指定不存在匹配时，如果存在序列 \[from,last)(其中 from!=last)，是完全匹配的前缀，那么就返回匹配 \[from,last)。 
匹配不完整或文本非常长时使用这个标签，更多信息参见部分匹配文档。]]
[[match_extra][Instructs the matching engine to retain all available capture information; if a capturing group is repeated then information about every repeat is available via match_results::captures() or sub_match_captures().\n
通知匹配引擎保留所有捕捉信息；如果捕捉组被重复，则每次重复的信息都可通过 match_results::captures() 或 sub_match_captures() 获得。]]
[[match_single_line][Equivalent to the inverse of Perl's m/ modifier; prevents ^ from matching after an embedded newline character (so that it only matches at the start of the text being matched), and $ from matching before an embedded newline (so that it only matches at the end of the text being matched).\n
等价于 Perl 的 m/ 修饰符的反转；阻止 ^ 在内部换行符后匹配(即只匹配整个文本的开始)，阻止 $ 在内部换行符前匹配(即只匹配整个文本的结束)。]]
[[match_prev_avail][Specifies that --first is a valid iterator position, when this flag is set then the flags match_not_bol and match_not_bow are ignored by the regular expression algorithms (RE.7) and iterators (RE.8).\n
指定 --first 是合法的迭代器位置。当这个标签被设置时正则表达式算法 (RE.7) 和迭代器 (RE.8) 忽略 match_not_bol 和 match_not_bow 标签。]]
[[match_not_dot_newline][Specifies that the expression "." does not match a newline character.  This is the inverse of Perl's s/ modifier.\n
指定表达式 "." 不匹配换行符。这和 Perl 的 s/ 修饰符相反。]]
[[match_not_dot_null][Specifies that the expression "." does not match a character null '\\0'.\n
指定表达式 "." 不匹配空字符 '\\0'。]]
[[match_posix][Specifies that the expression should be matched according to the POSIX
   [link boost_regex.syntax.leftmost_longest_rule leftmost-longest rule], 
   regardless of what kind of expression was compiled.
   Be warned that these rules do not work well with many Perl-specific features
   such as non-greedy repeats.\n
   指定表达式使用POSIX [link boost_regex.syntax.leftmost_longest_rule 最左最长规则] 进行匹配，而不管是什么类型的表达式。 
   需要注意的是这个规则同很多Perl的特性 (如非贪婪重复) 不能很好地一同工作。]]
[[match_perl][Specifies that the expression should be matched according to
   the [link boost_regex.syntax.perl_syntax.what_gets_matched Perl matching rules], 
   irrespective of what kind of expression was
   compiled.\n
   指定正则表达式使用 [link boost_regex.syntax.perl_syntax.what_gets_matched Perl匹配规则] 进行匹配，而不管是什么类型的表达式。]]
[[match_nosubs][Makes the expression behave as if it had no marked
   subexpressions, no matter how many capturing groups are actually
   present.  The [match_results] class will only contain information
   about the overall match, and not any sub-expressions.\n
   使得不管实际有多少捕捉组，表达式都像没有标记子表达式一样。[match_results] 类只包含全部匹配的信息，没有子表达式。]]

[[format_default][Specifies that when a regular expression match is to be 
      replaced by a new string, that the new string is constructed using the rules 
      used by the ECMAScript replace function in ECMA-262, ECMAScript Language 
      Specification, Chapter 15 part 5.4.11 String.prototype.replace. (FWD.1). \n
      指定当正则表达式匹配被替换为新字符串，新字符串使用 EMCAScript 替换函数的规则构造，见 ECMA-262, ECMAScript Language 
      Specification, Chapter 15 part 5.4.11 String.prototype.replace. (FWD.1)。
      
      This is functionally identical to the [link boost_regex.format.perl_format Perl format string rules].\n
      这实际上相当于 [link boost_regex.format.perl_format Perl格式化字符串规则]。
      
      In addition during search and replace operations then all non-overlapping 
      occurrences of the regular expression are located and replaced, and sections 
      of the input that did not match the expression, are copied unchanged to the 
      output string.\n
      在搜索和替换的操作中正则表达式的所有非重复出现都被定位替换，输出中不被匹配的部分被不变地拷贝到输出字符串。]]
[[format_sed][Specifies that when a regular expression match is to be 
      replaced by a new string, that the new string is constructed using 
      the rules used by the Unix sed utility in IEEE Std 1003.1-2001, 
      Portable Operating SystemInterface (POSIX ), Shells and Utilities.      
      See also the [link boost_regex.format.sed_format Sed Format string reference].\n
      指定当正则表达式匹配用新字符串替换时，新字符使用 Unix 工具 sed 的规则构造，见 IEEE Std 1003.1-2001, 
      Portable Operating SystemInterface (POSIX ), Shells and Utilities。请参见 
      [link boost_regex.format.sed_format Sed格式化字符串参考]。]]
[[format_perl][Specifies that when a regular expression match is to be replaced by 
      a new string, that the new string is constructed using 
      [link boost_regex.format.perl_format the same rules as Perl 5].\n
      指定当正则表达式匹配用新字符串替换时，新字符串使用 [link boost_regex.format.perl_format 与 Perl 5 相同的规则] 构造。]]
[[format_literal][Specifies that when a regular expression match is to be 
      replaced by a new string, that the new string is a literal copy of 
      the replacement text.\n
      指定当正则表达式替换用新字符串替换时，新字符串使用替换文本的字面拷贝。]]
[[format_all][Specifies that all syntax extensions are enabled, including 
      conditional (?ddexpression1:expression2) replacements: see 
      the [link boost_regex.format.boost_format_syntax format string guide] for more details.\n
      使用所有扩展语法，包括条件替换 (?ddexpression1:expression2)：更多细节参见 
      [link boost_regex.format.boost_format_syntax 格式化字符串指南]。]]
[[format_no_copy][When specified during a search and replace operation, then sections of the character container sequence being searched that do match the regular expression, are not copied to the output string.\n
指定进行搜索和替换的操作中，字符容器序列中不被匹配的部分，不拷贝到输出字符。]]
[[format_first_only][When specified during a search and replace operation, then only the first occurrence of the regular expression is replaced.\n
在搜索和替换的操作中指定该选项时，只有第一个匹配被替换。]]
]

[endsect]


