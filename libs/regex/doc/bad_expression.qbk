[/ 
  Copyright 2006-2007 John Maddock.
  Distributed under the Boost Software License, Version 1.0.
  (See accompanying file LICENSE_1_0.txt or copy at
  http://www.boost.org/LICENSE_1_0.txt).
]


[section:bad_expression bad_expression]

[h4 Synopsis 概要]

   #include <boost/pattern_except.hpp>

The class `regex_error` defines the type of objects thrown as exceptions to 
report errors during the conversion from a string representing a regular 
expression to a finite state machine.  \n
类 `regex_error` 定义了在将正则表达式字符串转换到有限状态机过程中出现错误时扔出的异常类型。

   namespace boost{

   class regex_error : public std::runtime_error
   {
   public:
      explicit regex_error(const std::string& s, regex_constants::error_type err, std::ptrdiff_t pos);
      explicit regex_error(boost::regex_constants::error_type err);
      boost::regex_constants::error_type code()const;
      std::ptrdiff_t position()const;
   };

   typedef regex_error bad_pattern; // for backwards compatibility
   typedef regex_error bad_expression; // for backwards compatibility
   
   } // namespace boost

[h4 Description 说明]

   regex_error(const std::string& s, regex_constants::error_type err, std::ptrdiff_t pos);
   regex_error(boost::regex_constants::error_type err);

[*Effects:] Constructs an object of class regex_error.\n
[*效果]：构造一个 `regex_error` 类的对象。

   boost::regex_constants::error_type code()const;

[*Effects:] returns the error code that represents parsing error that occurred.\n
[*效果]：返回表示所发生的分析错误的错误代码。

   std::ptrdiff_t position()const; 

[*Effects:] returns the location in the expression where parsing stopped.\n
[*效果]：返回表达式中停止分析的位置。

Footnotes: the choice of `std::runtime_error` as the base class for `regex_error` 
is moot; depending upon how the library is used exceptions may be either 
logic errors (programmer supplied expressions) or run time errors 
(user supplied expressions).  The library previously used `bad_pattern` 
and `bad_expression` for errors, these have been replaced by the single 
class `regex_error` to keep the library in synchronization with the 
[tr1].\n
脚注：将 `std::runtime_error` 作为 `regex_error` 的基类是无实际意义的； 
依赖于库如何被使用，异常可能是逻辑错误(程序员提供的表达式)或运行时错误(用户提供的表达式)。 
库之前使用 `bad_pattern` 和 `bad_expression` 用于错误，现在已经被替换为单个类 `regex_error`， 
保持本库与 [tr1] 同步。

[endsect]
