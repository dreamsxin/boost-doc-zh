<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>



  
  
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">



  
  
  <meta name="GENERATOR" content="Microsoft FrontPage 4.0">



  
  
  <meta name="ProgId" content="FrontPage.Editor.Document">



  
  
  <title>Header boost/cstdint.hpp</title>
</head>


<body bgcolor="#ffffff" text="#000000">




<h1><img src="../../boost.png" alt="boost.png (6897 bytes)" align="middle" height="86" width="277">头文件
boost/cstdint.hpp&nbsp;</h1>



<p>头文件 <code><a href="../../boost/cstdint.hpp">&lt;boost/cstdint.hpp&gt;</a></code> 提供了用于编写要求指定整数宽度的可移植代码的 typedef.  所有 typedef 均位于名字空间 boost.</p>



<p>本规范是基于 ISO/IEC 9899:1999 C 语言标准的头文件 &lt;stdint.h&gt; 的。C标准所要求的64位类型没有在 boost 头文件中要求，也可能不被实现支持，因为 <code>long long</code> 还未被包含在 C++ 标准中。</p>



<p>测试程序请见 <a href="cstdint_test.cpp">cstdint_test.cpp</a>.</p>



<h2>精确宽度的整数类型</h2>



<p>typedef <code>int#_t</code>, 其中 # 代表宽度，表示一个宽度恰好为 # 位的有符号整数类型；如 <code>int8_t</code> 表示8-位的有符号整数类型。同样，typedef <code>uint#_t</code>
表示一个宽度恰好为 # 位的无符号整数类型。</p>



<p>这些类型是可选的。不过，如果一个实现提供了宽度为 8, 16, 32, 或 64 位的整数类型，它就应该定义相应的
typedef 名字。</p>



<h2>最小宽度的整数类型</h2>



<p>typedef <code>int_least#_t</code>, 其中 # 代表宽度，表示一个宽度至少为 # 位的有符号整数类型，且没有位数更少的有符号整数类型至少具有给定的宽度。因此，<code>int_least32_t</code>
表示一个至少32位的有符号整数类型。同样，typedef&nbsp;<code>uint_least#_t</code> 表示一个宽度至少为 # 位的无符号整数类型，且没有位数更少的无符号整数类型至少具有给定的宽度。</p>



<p>需具备的最小宽度整数类型：</p>



<ul>



  <li><code>int_least8_t</code></li>



  <li><code>int_least16_t</code></li>



  <li><code>int_least32_t</code></li>



  <li><code>uint_least8_t</code></li>



  <li><code>uint_least16_t</code></li>



  <li><code>uint_least32_t</code></li>



</ul>



<p>其它所有最小宽度整数类型都是可选的。</p>



<h2>最快最小宽度整数类型</h2>



<p>typedef <code>int_fast#_t</code>, 其中 # 代表宽度，表示宽度至少为 # 位的且速度最快的有符号整数类型。同样 typedef <code>uint_fast#_t</code> 表示宽度至少为 # 位的且速度最快的无符号整数类型。</p>



<p>不能保证这些类型对于所有用途都是最快的。不过在任何情况下，它们都满足符号和宽度的要求。</p>



<p>需具备的最快最小宽度整数类型：</p>



<ul>



  <li><code>int_fast8_t</code></li>



  <li><code>int_fast16_t</code></li>



  <li><code>int_fast32_t</code></li>



  <li><code>uint_fast8_t</code></li>



  <li><code>uint_fast16_t</code></li>



  <li><code>uint_fast32_t</code></li>



</ul>



<p>其它所有最快最小宽度整数类型都是可选的。</p>



<h2>最大宽度整数类型</h2>



<p>typedef <code>intmax_t </code>表示一个有符号整数类型，它可以表示任意有符号整数类型的值。</p>



<p>typedef <code>uintmax_t</code> 表示一个无符号整数类型，它可以表示任意无符号整数类型的值。</p>



<p>这两个类型都是必需的。</p>



<hr>
<p>Revised <!--webbot bot="Timestamp" s-type="EDITED" s-format="%d %b %Y" startspan -->19 Aug 2001<!--webbot bot="Timestamp" endspan i-checksum="14767" -->
</p>



<p>&nbsp;</p>




</body>
</html>
