[/
 / Copyright (c) 2009 Steven Watanabe
 /
 / Distributed under the Boost Software License, Version 1.0. (See
 / accompanying file LICENSE_1_0.txt or copy at
 / http://www.boost.org/LICENSE_1_0.txt)
]

For some people, performance of random number generation is an important
consideration when choosing a random number generator or a particular
distribution function. This page provides numerous performance tests with
the wide variety of generators and distributions available in the boost
library.\n
对于某些人来说，在选择一个随机数生成器或特定的分布函数时，随机数生成的性能是重要的考虑。
本节提供了 boost 库中各种生成器和分布的性能测试结果。

The performance has been evaluated on an Intel(R) Xeon(TM) MP
CPU 3.66GHz, Gentoo Base System release 1.12.11.1, GCC 4.3.2,
glibc 2.9 and on an Intel(R) Core(TM)2 CPU T7600
@2.33 Ghz with Microsoft Windows XP Professional, Service Pack 2 Build
2600, Microsoft Visual C++ 2008 9.0.21022.
The speed is reported in million random numbers
per second (M rn/sec), generated in a tight loop.\n
性能测试是在一个 Intel(R) Xeon(TM) MP CPU 3.66GHz, Gentoo Base System release 1.12.11.1, GCC 4.3.2, glibc 2.9 
和一个  Intel(R) Core(TM)2 CPU T7600@2.33 Ghz with Microsoft Windows XP Professional, Service Pack 2 Build
2600, Microsoft Visual C++ 2008 9.0.21022 上进行的。速度的单位为兆随机数每秒，由一个紧凑的循环测定的。

[include generator_performance_linux.qbk]
[include generator_performance_windows.qbk]

Note that the lagged Fibonacci and ranlux_01 generators produce
floating-point numbers, whereas all others produce integers.\n
注意，lagged-Fibonacci 和 ranlux_01 生成器产生的是浮点数，而其它的生成器产生整数。

[include distribution_performance_linux.qbk]
[include distribution_performance_windows.qbk]
