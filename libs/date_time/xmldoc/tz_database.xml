<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE library PUBLIC "-//Boost//DTD BoostBook XML V1.0//EN"
"../../../tools/boostbook/dtd/boostbook.dtd">

<!-- Copyright (c) 2001-2005 CrystalClear Software, Inc.
     Subject to the Boost Software License, Version 1.0.
     (See accompanying file LICENSE_1_0.txt or  http://www.boost.org/LICENSE_1_0.txt)
-->

<section id="date_time.local_time.tz_database">
  <title>Time Zone Database 时区数据库</title>

  <link linkend="tz_database_intro">Introduction 简介</link> --
  <link linkend="tz_database_header">Header 头文件</link> --
  <link linkend="tz_database_constr">Construction 构造</link> --
  <link linkend="tz_database_accessors">Accessors 访问器</link> --
  <link linkend="tz_database_datafile">Data File Details 数据文件的细节</link>

  <anchor id="tz_database_intro" />
  <bridgehead renderas="sect3">Introduction 简介</bridgehead>
  <para>
    The local_time system depends on the ability to store time zone information. Our Time Zone Database (tz_database) is a means of permanently storing that data. The specifications for many time zones (377 at this time) are provided. These specifications are based on data found in the <ulink url="http://www.twinsun.com/tz/tz-link.htm">zoneinfo datebase</ulink>. The specifications are stored in the file:<sbr/>
    local_time 系统依赖于保存时区信息的能力。我们的时区数据库(tz_database)就是一个永久保存这些数据的方法。
    它提供了多个(目前为377个)时间的描述。这些描述基于在 
    <ulink url="http://www.twinsun.com/tz/tz-link.htm">zoneinfo 数据库</ulink> 中的数据。这些描述保存在文件：
    <screen>libs/date_time/data/date_time_zonespec.csv</screen>. While this file already contains specifications for many time zones, it's real intent is for the user to modify it by adding (or removing) time zones to fit their application. See <link linkend="tz_database_datafile">Data File Details</link> to learn how this is accomplished.<sbr/>
    中。该文件已包含了多个时区的描述；用户可以对它进行修改，增加(或删除)一些时区来适应它们的应用程序。
   请参看 <link linkend="tz_database_datafile">数据文件的细节</link>，学习如何完成这一工作。
  </para>

  <anchor id="tz_database_header" />
  <bridgehead renderas="sect3">Header 头文件</bridgehead>
  <para> 
    The inclusion of a single header will bring in all boost::local_time types, functions, and IO operators.<sbr/>
    包含单个头文件就可以引入所有 boost::local_time 类型、函数和 IO 操作符。
    <programlisting>#include "boost/date_time/local_time/local_time.hpp"
    </programlisting>
  </para>

  <anchor id="tz_database_constr" />
  <bridgehead renderas="sect3">Construction 构造</bridgehead>
  <para>
    The only constructor takes no arguments and creates an empty database. It is up to the user to populate the database. This is typically achieved by loading the desired datafile, but can also be accomplished by means of the <code>add_record(...)</code> function (see the <link linkend="tz_database_accessors">Accessors table</link>). A <code>local_time::data_not_accessible</code> exception will be thrown if given zonespec file cannot be found. <code>local_time::bad_field_count</code> exception will be thrown if the number of fields in given zonespec file is incorrect.<sbr/>
    只有一个构造函数，不带参数，它创建一个空的数据库。由用户来组装该数据库。典型的方法是导入所需的数据文件，
    不过也可以通过 <code>add_record(...)</code> 函数来完成(请见 <link linkend="tz_database_accessors">访问器表</link>)。
    如果给定的时区规格文件无法找到，将抛出 <code>local_time::data_not_accessible</code> 异常。
    如果给定文件的字段数不正确，则抛出 <code>local_time::bad_field_count</code> 异常。
  </para>
  <para>
    <informaltable frame="all">
      <tgroup cols="2">
        <thead>
          <row>
            <entry valign="top" morerows="1">Syntax 语法</entry>
            <entry>Description 说明</entry>
          </row>
        </thead>
        <tbody>
          <row>
            <entry valign="top" morerows="1"><screen>tz_database()</screen></entry>
            <entry>Constructor creates an empty database.<sbr/>
            构造函数，创建一个空的数据库。</entry>
          </row>
          <row>
            <entry><screen>tz_database tz_db;</screen></entry>
          </row>

          <row>
            <entry valign="top" morerows="1"><screen>bool load_from_file(std::string)</screen></entry>
            <entry>Parameter is path to a time zone spec csv file (see <link linkend="tz_database_datafile">Data File Details</link> for details on the contents of this file). This function populates the database with time zone records found in the zone spec file. A <code>local_time::data_not_accessible</code> exception will be thrown if given zonespec file cannot be found. <code>local_time::bad_field_count</code> exception will be thrown if the number of fields in given zonespec file is incorrect.<sbr/>
            参数为一个时区规格 csv 文件(有关该文件的内容细节请见 <link linkend="tz_database_datafile">数据文件的细节</link>)
            的路径。该函数以时区规格文件中的时区记录来组装数据库。如果给定的时区规格文件无法找到，
            将抛出 <code>local_time::data_not_accessible</code> 异常。如果给定文件的字段数不正确，
            则抛出 <code>local_time::bad_field_count</code> 异常。</entry>
          </row>
          <row>
            <entry><screen>tz_database tz_db;
tz_db.load_from_file("./date_time_zonespec.csv");</screen>
            </entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable>
  </para>

  <anchor id="tz_database_accessors" />
  <bridgehead renderas="sect3">Accessors 访问器</bridgehead>
  <para>
    <informaltable frame="all">
      <tgroup cols="2">
        <thead>
          <row>
            <entry valign="top" morerows="1">Syntax 语法</entry>
            <entry>Description 说明</entry>
          </row>
          <row>
            <entry>Example 例子</entry>
          </row>
        </thead>
        <tbody>
          <row>
            <entry valign="top" morerows="1"><screen>bool tz_db.add_record(std::string id, 
                      <link linkend="date_time.local_time.custom_time_zone_ptr">time_zone_ptr</link> tz);</screen></entry>
            <entry>Adds a time_zone, or a posix_time_zone, to the database. ID is the region name for this zone (Ex: "America/Phoenix").<sbr/>
            增加一个 time_zone, 或一个 posix_time_zone, 到数据库中。ID 为该时区的区域名(如："America/Phoenix")。</entry>
          </row>
          <row>
            <entry><screen>time_zone_ptr zone(
  new posix_time_zone("PST-8PDT,M4.1.0,M10.1.0")
);
std::string id("America/West_Coast");
tz_db.add_record(id, zone);</screen>
            </entry>
          </row>
            
          <row>
            <entry valign="top" morerows="1"><screen>time_zone_ptr 
  tz_db.time_zone_from_region(string id);</screen></entry>
            <entry>Returns a time_zone, via a time_zone_ptr, that matches the region listed in the data file. A null pointer is returned if no match is found.<sbr/>
            通过 time_zone_ptr 返回一个 time_zone, 它与数据文件所列的区域名相匹配。如果没有找到匹配项，则返回空指针。 
            </entry>
          </row>
          <row>
            <entry><screen>time_zone_ptr nyc =
  tz_db.time_zone_from_region("America/New_York");</screen>
            </entry>
          </row>
          
          <row>
            <entry valign="top" morerows="1"><screen>vector&lt;string&gt; tz_db.region_list();</screen></entry>
            <entry>Returns a vector of strings that holds all the region ID strings from the database.<sbr/>
            返回一个字符串 vector，其中保存了来自数据库的所有区域 ID 字符串。</entry>
          </row>
          <row>
            <entry><screen>std::vector&lt;std::string&gt; regions;
regions = tz_db.region_list();</screen>
            </entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable>
  </para>

  <anchor id="tz_database_datafile" />
  <bridgehead renderas="sect3">Data File Details 数据文件的细节</bridgehead>
  <link linkend="tz_database_fields">Field Description/Details 字段描述/细节</link>
  <para>
    The csv file containing the zone_specs used by the boost::local_time::tz_database is intended to be customized by the library user. When customizing this file (or creating your own) the file must follow a specific format.<sbr/>
    存放被 boost::local_time::tz_database 使用的 zone_specs 数据的 csv 文件可以由库用户进行定制。
    在定制该文件(或创建你自己的文件)时，必须遵循特定的格式。
  </para>
  <para>
    This first line is expected to contain column headings and is therefore
not processed by the tz_database.<sbr/>
第一行要包含列头，而且这行不会被 tz_database 处理。
  </para>
  <para>
    Each record (line) must have eleven fields. Some of those fields can be empty. Every field (even empty ones) must be enclosed in double-quotes.<sbr/>
    每个记录(即每行)必须有11个字段。其中有些字段可以为空。每个字段(即使是空的)必须用双引号括起来。
    <literallayout>
      Ex: 例如：
      "America/Phoenix" &lt;- string enclosed in quotes  带引号的字符串
      ""                &lt;- empty field  空字段
    </literallayout>
  </para>
  <para>
    Some fields represent a length of time. The format of these fields must be:<sbr/>
    有的字段用于表示时间的长度。这些字段的格式必须是：
    <literallayout>
      "{+|-}hh:mm[:ss]" &lt;- length-of-time format  时间长度的格式
    </literallayout>
    Where the plus or minus is mandatory and the seconds are optional.<sbr/>
    其中加号或减号是必须的，而秒数是可选的。
  </para>
  <para>
    Since some time zones do not use daylight savings it is not always necessary for every field in a zone_spec to contain a value. All zone_specs must have at least ID and GMT offset. Zones that use daylight savings must have all fields filled except: STD ABBR, STD NAME, DST NAME. You should take note that DST ABBR is mandatory for zones that use daylight savings (see field descriptions for further details).<sbr/>
    因为有些时区不使用夏令时，所以不是 zone_spec 的每个字段都必须包含有值。所有 zone_specs 必须至少有一个 ID 和 GMT 偏移量。
    使用夏令时的时区必须走填写所有字段，除了：STD ABBR, STD NAME, DST NAME. 你要留意，对于使用夏令时的时区，
    DST ABBR 是必须的(更多详情请见字段描述)。 
  </para>

  <anchor id="tz_database_fields" />
  <bridgehead renderas="sect3">Field Description/Details 字段描述/细节</bridgehead>
  <para>
    <itemizedlist>
      <listitem>
        ID
        <para>
          Contains the identifying string for the zone_spec. Any string will do as long as it's unique. No two ID's can be the same.<sbr/>
          包含 zone_spec 的标识字符串。可以是任意字符串，只要它是唯一的。不能有两个ID相同。
        </para>
      </listitem>
      <listitem>
        STD ABBR
      </listitem>
      <listitem>
        STD NAME
      </listitem>
      <listitem>
        DST ABBR
      </listitem>
      <listitem>
        DST NAME
        <para>
          These four are all the names and abbreviations used by the time zone being described. While any string will do in these fields, care should be taken. These fields hold the strings that will be used in the output of many of the local_time classes.<sbr/>
          这四项是时区所用的名字和缩写。因为这些字段可以为任意字符串，你必须要小心。
          这些字段的字符串将被用于多个 local_time 类的输出中。
        </para>
      </listitem>
      <listitem>
        GMT offset
        <para>
          This is the number of hours added to utc to get the local time before any daylight savings adjustments are made. Some examples are: America/New_York offset -5 hours, and Africa/Cairo offset +2 hours. The format must follow the length-of-time format described above.<sbr/>
          这是一个小时数，当被加到UTC上后，可以得到未进行夏令时调整前的本地时间。以下是一些例子：美国/纽约的偏移量为-5小时，
          而非洲/开罗的偏移量则为+2小时。它的格式必须遵循前面所说的时间长度格式。
        </para>
      </listitem>
      <listitem>
        DST adjustment
        <para>
          The amount of time added to gmt_offset when daylight savings is in effect. The format must follow the length-of-time format described above.<sbr/>
          这是使用夏令时时要加到 gmt_offset 上的时间数量。其格式必须遵循前面所说的时间长度格式。
        </para>
        <para>
          NOTE: more rule capabilities are needed - this portion of the tz_database is incomplete<sbr/>
          注：需要更多的表示规则的能力 - tz_database 的这部分不够完善。
        </para>
      </listitem>
      <listitem>
        DST Start Date rule
        <para>
          This is a specially formatted string that describes the day of year in which the transition take place. It holds three fields of it's own, separated by semicolons.<sbr/>
          这是一个特定格式的字符串，表示每天哪一天进行夏令时转换。它本身包含三个字段，由分号分隔。
          <orderedlist>
            <listitem>
              The first field indicates the "nth" weekday of the month. The possible values are: 1 (first), 2 (second), 3 (third), 4 (fourth), 5 (fifth), and -1 (last).<sbr/>
              第一个字段表示当月中的第n个周日。可取的值为：1(第一周)，2(第二周)，3(第三周)，4(第四周)，5(第五周)，
              和 -1(最后一周)。 
            </listitem>
            <listitem>
              The second field indicates the day-of-week from 0-6 (Sun=0).<sbr/>
              第二个字段表示周中的第几天，从0到6(星期天=0)。 
            </listitem>
            <listitem>
              The third field indicates the month from 1-12 (Jan=1).<sbr/>
              第三个字段表示第几月，从1到12(一月=1)。 
            </listitem>
          </orderedlist>
          Examples are: "-1;5;9"="Last Friday of September", "2;1;3"="Second Monday of March"<sbr/>
          例如："-1;5;9"="九月最后一个星期五"，"2;1;3"="三月第二个星期一"
        </para>
      </listitem>
      <listitem>
        Start time
        <para>
          Start time is the number of hours past midnight, on the day of the start transition, the transition takes place. More simply put, the time of day the transition is made (in 24 hours format). The format must follow the length-of-time format described above with the exception that it must always be positive.<sbr/>
          开始时间为开始夏令时转换当天午夜后的小时数。表示该天中开始进行转换的时间点(以24小时格式表示)。
          格式必须遵循前文所说的时间长度格式，且必须为正。
        </para>
      </listitem>
      <listitem>
        DST End date rule
        <para>
          See DST Start date rule. The difference here is this is the day daylight savings ends (transition to STD).<sbr/>
          请见 DST 开始日期规则。不同的是，本项表示的是夏令时结束的日期(转换为 STD)。 
        </para>
      </listitem>
      <listitem>
        End time
        <para>
          Same as Start time.<sbr/>
          与开始时间相同。
        </para>
      </listitem>
    </itemizedlist>
  </para>

</section>
