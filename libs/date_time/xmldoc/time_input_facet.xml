<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE library PUBLIC "-//Boost//DTD BoostBook XML V1.0//EN"
"../../../tools/boostbook/dtd/boostbook.dtd">

<!-- Copyright (c) 2005 CrystalClear Software, Inc.
     Subject to the Boost Software License, Version 1.0.
     (See accompanying file LICENSE_1_0.txt or  http://www.boost.org/LICENSE_1_0.txt)
-->

<section id="date_time.time_input_facet">
  <title>Time Input Facet 时间输入Facet</title>

  <link linkend="time_input_facet_intro">Introduction 简介</link> -
  <link linkend="time_input_facet_constr">Construction 构造</link> -
  <link linkend="time_input_facet_accessors">Accessors 访问器</link>

  <anchor id="time_input_facet_intro" />
  <bridgehead renderas="sect3">Introduction 简介</bridgehead>
  <para>The <code>boost::date_time::time_input_facet</code> is an extension of the <code>date_input_facet</code>. It is typedef'ed in the <code>boost::posix_time</code> namespace as <code>time_input_facet</code> and <code>wtime_input_facet</code>. It is typedef'ed in the <code>boost::local_time</code> namespace as <code>local_time_input_facet</code> and <code>wlocal_time_input_facet</code>.<sbr/>
  <code>boost::date_time::time_input_facet</code> 是 <code>date_input_facet</code> 的扩展。
  它在 <code>boost::posix_time</code> 名字空间中被 typedef 为 <code>time_input_facet</code> 和 <code>wtime_input_facet</code>. 
  在 <code>boost::local_time</code> 名字空间中被 typedef 为 <code>local_time_input_facet</code> 和 
  <code>wlocal_time_input_facet</code>. 


  </para>

  <anchor id="time_input_facet_constr" />
  <bridgehead renderas="sect3">Construction 构造</bridgehead>
  <para>
    <informaltable frame="all">
      <tgroup cols="2">
        <thead>
          <row>
            <entry>Syntax 语法</entry>
            <entry>Description 说明</entry>
          </row>
        </thead>
        <tbody>
          <row>
            <entry valign="top"><screen>time_input_facet()</screen></entry>
            <entry>Default constructor<sbr/>
            缺省构造函数。</entry>
          </row>
          <row>
            <entry valign="top"><screen>time_input_facet(string_type)</screen></entry>
            <entry>Format given will be used for date/time input. All other formats will use their defaults.<sbr/>
            给定的 Format 用于日期/时间的输入。所有其它格式使用它们的缺省值。</entry>
          </row>
          <row>
            <entry valign="top"><screen>time_input_facet(...)
  Parameters:
    string_type format
    format_date_parser_type
    special_values_parser_type
    period_parser_type
    date_gen_parser_type</screen></entry>
<entry>Format given will be used for date/time input. The remaining parameters are parser objects. Further details on these objects can be found <link linkend="date_time.io_objects">here</link>.<sbr/>
给定的 Format 用于日期/时间的输入。其它参数为分析器对象。有关这些对象的更多细节请见 
<link linkend="date_time.io_objects">这里</link>。</entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable>
  </para>

  <anchor id="time_input_facet_accessors" />
  <bridgehead renderas="sect3">Accessors 访问器</bridgehead>
  <para>
    The time_input_facet inherits all the public date_input_facet methods. Therefore, the date_input_facet methods are not listed here. Instead, they can be found by following <link linkend="date_time.date_input_facet">this</link> link.<sbr/>
    time_input_facet 继承了 date_input_facet 的所有公有方法。因此，下面不列出 date_input_facet 的访问。
    你可以在 <link linkend="date_time.date_input_facet">这个链接</link> 中找到它们。
    <informaltable frame="all">
      <tgroup cols="2">
        <thead>
          <row>
            <entry valign="top" morerows="1">Syntax 语法</entry>
            <entry>Description 说明</entry>
          </row>
          <row>
              <entry>Example 例子</entry>
          </row>
        </thead>
        <tbody>

          <row>
            <entry valign="top" morerows="1"><screen>void set_iso_format()</screen></entry>
            <entry>Sets the time format to ISO<sbr/>
            设置时间格式为 ISO</entry>
          </row>
          <row>
            <entry><screen>f->set_iso_format();
// "%Y%m%dT%H%M%S%F%q"
"20051225T132536.789-0700"</screen></entry>
          </row>

          <row>
            <entry valign="top" morerows="1"><screen>void set_iso_extended_format()</screen></entry>
            <entry>Sets the date format to ISO Extended<sbr/>
            设置时间格式为 ISO 扩展。</entry>
          </row>
          <row>
            <entry><screen>f->set_iso_extended_format();
// "%Y-%m-%d %H:%M:%S%F %Q"
"2005-12-25 13:25:36.789 -07:00"</screen></entry>
          </row>

          <row>
            <entry valign="top" morerows="1"><screen>void time_duration_format(...)
  Parameter:
    char_type*</screen></entry>
            <entry>Sets the time_duration format.<sbr/>
            设置 time_duration 格式。</entry>
          </row>
          <row>
            <entry><screen>f->time_duration_format("%H:%M");
// hours and minutes only 只有小时和分钟</screen></entry>
          </row>


          <row>
            <entry valign="top" morerows="1"><screen>InItrT get(...)
  Common parameters for all 
  'get' functions:
    InItrT from
    InItrT to
    ios_base
  Unique parameter for 'get' funcs:
    gregorian object</screen></entry>
            <entry>There are 3 get functions in the time_input_facet. The common parameters are: an iterator pointing to the begining of the stream, an iterator pointing to the end of the stream, and an ios_base object. Each unique gregorian object has it's own get function. Each unique get function is described below.<sbr/>
            在 time_input_facet 中有3个 get 函数。它们的共同参数是：一个指向流的开始位置的迭代器，
            一个指向流的结束位置的迭代器，以及一个 ios_base 对象。每个格里历对象都有自己的 get 函数。
            每个 get 函数的描述如下。</entry>
          </row>
          <row>
            <entry><screen></screen></entry>
          </row>

          <row>
            <entry valign="top" morerows="1"><screen>InItrT get(..., ptime)</screen></entry>
            <entry>Gets a ptime object from the stream using the format set by <code>format(...)</code> or the default.<sbr/>
            从流中取出一个 ptime 对象，使用由 <code>format(...)</code> 设置的格式或缺省格式。</entry>
          </row>
          <row>
            <entry><screen>ss.str("2005-Jan-01 13:12:01");
ss >> pt; // default format 缺省格式</screen></entry>
          </row>

          <row>
            <entry valign="top" morerows="1"><screen>InItrT get(..., time_duration)</screen></entry>
            <entry>Gets a time_duration object from the stream using the format set by <code>time_duration_format(...)</code> or the default.<sbr/>
            从流中取出一个 time_duration 对象，使用由 <code>time_duration_format(...)</code> 设置的格式或缺省格式。</entry>
          </row>
          <row>
            <entry><screen>ss.str("01:25:15.000123000");
ss >> td; // default format 缺省格式</screen></entry>
          </row>

          <row>
            <entry valign="top" morerows="1"><screen>InItrT get(..., time_period)</screen></entry>
            <entry>Gets a time_period from the stream. The format of the dates/times will use the format set by <code>format(..)</code> or the default date and time format. The type of period (open or closed range) and the delimiters used are those used by the period_parser.<sbr/>
            从流中取出一个 time_period 对象。日期/时间的格式使用由 <code>format(..)</code> 设置的格式或缺省的日期时间格式。
            period 的类型(开或闭区间)以及所用的分隔符使用 period_parser 的设置。</entry>
          </row>
          <row>
            <entry>see the <link linkend="date_time.io_tutorial">tutorial</link> for a complete example.<sbr/>
            完整的例子请见 <link linkend="date_time.io_tutorial">指南</link>。</entry>
          </row>

          <!-- This should be changed later
          <row>
            <entry valign="top" morerows="1"><screen>InItrT get_local_time(..., local_date_time)</screen></entry>
            <entry>Gets a local_date_time object from the stream using the format set by <code>format(...)</code> or the default.</entry>
          </row>
          <row>
            <entry><screen></screen></entry>
          </row>
          -->
          

        </tbody>
      </tgroup>
    </informaltable>
  </para>

</section>
