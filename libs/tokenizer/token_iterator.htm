<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>

  
  <meta http-equiv="Content-Language" content="en-us">

  
  <meta http-equiv="Content-Type" content="text/html; charset=us-ascii">

  
  <meta name="GENERATOR" content="Microsoft FrontPage 6.0">

  
  <meta name="ProgId" content="FrontPage.Editor.Document">


  
  <title>Boost Token Iterator</title>
</head>



<body alink="#ff0000" bgcolor="#ffffff" link="#0000ee" text="#000000" vlink="#551a8b">

  
<p><img src="../../boost.png" alt="C++ Boost" height="86" width="277"><br>
</p>


  
<h1 align="center">&#21333;&#35789;&#36845;&#20195;&#22120;</h1>

  
<pre>template &lt;<br>        class TokenizerFunc = char_delimiters_separator&lt;char&gt;, <br>        class Iterator = std::string::const_iterator,<br>        class Type = std::string<br>&gt;<br>class token_iterator_generator <br></pre>

  
<pre>template&lt;class Type, class Iterator, class TokenizerFunc&gt;<br>typename token_iterator_generator&lt;TokenizerFunc,Iterator,Type&gt;::type <br>make_token_iterator(Iterator begin, Iterator end,const TokenizerFunc&amp; fun)<br><br></pre>


  
<p>&#21333;&#35789;&#36845;&#20195;&#22120;&#25552;&#20379;&#19968;&#20010;&#36845;&#20195;&#22120;&#35270;&#22270;&#65292;&#29992;&#20110;&#25351;&#31034;&#34987;&#20998;&#26512;&#24207;&#21015;&#20013;&#30340;&#21333;&#35789;&#12290;</p>


  
<h2>&#20363;&#23376;</h2>

  
<pre>/// simple_example_5.cpp<br>#include&lt;iostream&gt;<br>#include&lt;boost/token_iterator.hpp&gt;<br>#include&lt;string&gt;<br><br>int main(){<br>   using namespace std;<br>   using namespace boost;<br>   string s = "12252001";<br>   int offsets[] = {2,2,4};<br>   offset_separator f(offsets, offsets+3);<br>   typedef token_iterator_generator&lt;offset_separator&gt;::type Iter;<br>   Iter beg = make_token_iterator&lt;string&gt;(s.begin(),s.end(),f);<br>   Iter end = make_token_iterator&lt;string&gt;(s.end(),s.end(),f); <br>   // &#19978;&#38754;&#36825;&#34892;&#35821;&#21477;&#20063;&#21487;&#20197;&#36825;&#26679;&#20889;&#65306;<br>   // Iter end;<br>   for(;beg!=end;++beg){<br>     cout &lt;&lt; *beg &lt;&lt; "\n";<br>   }<br>}<br></pre>


  
<p>&nbsp;</p>


  
<h3>&#27169;&#26495;&#21442;&#25968;</h3>


  
<table summary="" border="1">

    <tbody>
    <tr>

      <th>&#21442;&#25968;</th>


      <th>&#25551;&#36848;</th>

    </tr>


    <tr>

      <td><tt>TokenizerFunc</tt></td>


      <td>&#29992;&#20110;&#20998;&#26512;&#24207;&#21015;&#30340; TokenizerFunction.</td>

    </tr>


    <tr>

      <td><tt>Iterator</tt></td>


      <td>&#29992;&#20110;&#25351;&#23450;&#24207;&#21015;&#30340;&#36845;&#20195;&#22120;&#31867;&#22411;&#12290;</td>

    </tr>


    <tr>

      <td><tt>Type</tt></td>


      <td>&#21333;&#35789;&#30340;&#31867;&#22411;&#65292;&#36890;&#24120;&#20026; string.</td>

    </tr>

  
  </tbody>
</table>


  
<h2>Model of</h2>


  
<p>Iterator &#30340;&#31181;&#31867;&#26368;&#22810;&#20026;&#21069;&#21521;&#36845;&#20195;&#22120;&#12290;&#20219;&#20309;&#26356;&#39640;&#30340;&#31181;&#31867;&#20250;&#34987;&#24403;&#20316;&#21069;&#21521;&#36845;&#20195;&#22120;&#12290;</p>


  
<h2>&#30456;&#20851;&#31867;&#22411;</h2>


  
<table summary="" border="1">

    <tbody>
    <tr>

      <td>
        
      <p align="center"><strong>&#31867;&#22411;</strong></p>

      </td>


      <td>
        
      <p align="center"><strong>&#35828;&#26126;</strong></p>

      </td>

    </tr>


    <tr>

      <td>token_iterator_generator::type</td>


      <td>&#21333;&#35789;&#36845;&#20195;&#22120;&#30340;&#31867;&#22411;</td>

    </tr>

  
  </tbody>
</table>


  
<h2>&#21019;&#24314;</h2>

  
<pre>template&lt;class Type, class Iterator, class TokenizerFunc&gt;<br>typename token_iterator_generator&lt;TokenizerFunc,Iterator,Type&gt;::type <br>make_token_iterator(Iterator begin, Iterator end,const TokenizerFunc&amp; fun)<br></pre>


  
<table summary="" border="1">

    <tbody>
    <tr>

      <td>
        
      <p align="center"><strong>&#21442;&#25968;</strong></p>

      </td>


      <td>
        
      <p align="center"><strong>&#25551;&#36848;</strong></p>

      </td>

    </tr>


    <tr>

      <td>begin</td>


      <td>&#34987;&#20998;&#26512;&#24207;&#21015;&#30340;&#24320;&#22987;</td>

    </tr>


    <tr>

      <td>end</td>


      <td>&#34987;&#20998;&#26512;&#24207;&#21015;&#30340;&#26411;&#23614;</td>

    </tr>


    <tr>

      <td>fun</td>


      <td>&#26576;&#20010;&#31526;&#21512; TokenizerFunction &#30340;&#20989;&#25968;&#23545;&#35937;</td>

    </tr>

  
  </tbody>
</table>


  
<p>&nbsp;</p>

  
<hr>

  
<p><a href="http://validator.w3.org/check?uri=referer"><img src="http://www.w3.org/Icons/valid-html401" alt="Valid HTML 4.01 Transitional" border="0" height="31" width="88"></a></p>


  
<p>Revised 
  <!--webbot bot="Timestamp" s-type="EDITED" s-format="%d %B, %Y" startspan -->25
  December, 2006<!--webbot bot="Timestamp" endspan i-checksum="38518" --></p>


  
<p><i>Copyright &copy; 2001 John R. Bandela</i></p>


  
<p><i>Distributed under the Boost Software License, Version 1.0. (See
  accompanying file <a href="../../LICENSE_1_0.txt">LICENSE_1_0.txt</a> or
  copy at <a href="http://www.boost.org/LICENSE_1_0.txt">http://www.boost.org/LICENSE_1_0.txt</a>)</i></p>

</body>
</html>
