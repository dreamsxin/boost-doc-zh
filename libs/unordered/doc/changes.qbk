
[/ Copyright 2008 Daniel James.
 / Distributed under the Boost Software License, Version 1.0. (See accompanying
 / file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt) ]

[section:changes Change Log 变更历史]

[h2 Review Version 审查版本]

Initial review version, for the review conducted from 7th December 2007 to
16th December 2007.\n
初始的审查版本，用于从 7th December 2007 到 16th December 2007 的审查。

[h2 1.35.0 Add-on - 31st March 2008]

Unofficial release uploaded to vault, to be used with Boost 1.35.0. Incorporated
many of the suggestions from the review.\n
非正式发布，上载到 vault 中，与 Boost 1.35.0 一起使用。集合了审查中的许多建议。

* Improved portability thanks to Boost regression testing.\n
  改进了可移植性，感谢 Boost regression 测试。
* Fix lots of typos, and clearer text in the documentation.\n
  修正多处笔误，使得文档更为清晰。
* Fix floating point to `std::size_t` conversion when calculating sizes from
  the max load factor, and use `double` in the calculation for greater accuracy.\n
  在从最大负载因子计算大小时，修正了浮点数到 `std::size_t` 的转换，对于更高精度的计算，则使用 `double`。
* Fix some errors in the examples.\n
  修正了例子中的一些错误

[h2 Boost 1.36.0]

First official release.\n
第一次正式发布。

* Rearrange the internals.\n
  内部的重新整理。
* Move semantics - full support when rvalue references are available, emulated
  using a cut down version of the Adobe move library when they are not.\n
  移动语义 - 当右值引用可用时完全支持，当右值引用不可用时使用 Adobe move 库的一个裁减版本来模仿。
* Emplace support when rvalue references and variadic template are available.\n
  当右值引用和可变参数模板可用时，支持 emplace。
* More efficient node allocation when rvalue references and variadic template
  are available.\n
  当右值引用和可变参数模板可用时，更高效的节点分配
* Added equality operators.\n
  增加了相等操作符。

[h2 Boost 1.37.0]

* Rename overload of `emplace` with hint, to `emplace_hint` as specified in
  [@http://www.open-std.org/JTC1/SC22/WG21/docs/papers/2008/n2691.pdf n2691].\n
  按照 [@http://www.open-std.org/JTC1/SC22/WG21/docs/papers/2008/n2691.pdf n2691] 
  中的说明，将带提示的 `emplace` 重载函数更名为 `emplace_hint`。
* Provide forwarding headers at `<boost/unordered/unordered_map_fwd.hpp>` and
  `<boost/unordered/unordered_set_fwd.hpp>`.\n
  在 `<boost/unordered/unordered_map_fwd.hpp>` 和 `<boost/unordered/unordered_set_fwd.hpp>` 中提供前向头文件。
* Move all the implementation inside `boost/unordered`, to assist
  modularization and hopefully make it easier to track changes in subversion.\n
  将所有实现移至 `boost/unordered` 内，以提高模块化并更易于在 subversion 中进行变更跟踪。

[h2 Boost 1.38.0]

* Use [@boost:/libs/utility/swap.html `boost::swap`].\n
  使用 [@boost:/libs/utility/swap.html `boost::swap`].
* [@https://svn.boost.org/trac/boost/ticket/2237 Ticket 2237]:
  Document that the equality and inequality operators are undefined for two
  objects if their equality predicates aren't equivalent. Thanks to Daniel
  Krügler.\n
  [@https://svn.boost.org/trac/boost/ticket/2237 Ticket 2237]: 
  文档记录：如果两个对象的相等谓词不等价，则它们的相等操作符和不等操作符均未定义。感谢 Daniel Krügler. 
* [@https://svn.boost.org/trac/boost/ticket/1710 Ticket 1710]: 
  Use a larger prime number list. Thanks to Thorsten Ottosen and Hervé
  Brönnimann.\n
  [@https://svn.boost.org/trac/boost/ticket/1710 Ticket 1710]: 
  使用了一个更大的质数列表。感谢 Thorsten Ottosen 和 Hervé Brönnimann.
* Use
  [@boost:/libs/type_traits/doc/html/boost_typetraits/category/alignment.html
  aligned storage] to store the types. This changes the way the allocator is
  used to construct nodes. It used to construct the node with two calls to
  the allocator's `construct` method - once for the pointers and once for the
  value. It now constructs the node with a single call to construct and
  then constructs the value using in place construction.\n
  使用 [@boost:/libs/type_traits/doc/html/boost_typetraits/category/alignment.html 对齐存储] 来保存类型。
  这修改了用于构造节点的分配器方式。以往构造一个节点需要两次调用分配器的 construct 方法 - 一次用于指针，另一次用于值。
  现在构造一个节点只需要一次调用，然后使用就地构造来对值进行构造。
* Add support for C++0x initializer lists where they're available (currently
  only g++ 4.4 in C++0x mode).\n
  在可用时，增加对 C++0x 初始化列表的支持(当前仅在 C++0x 模式的 g++ 4.4 下可用)。

[h2 Boost 1.39.0]

* [@https://svn.boost.org/trac/boost/ticket/2756 Ticket 2756]: Avoid a warning
  on Visual C++ 2009.\n
  [@https://svn.boost.org/trac/boost/ticket/2756 Ticket 2756]: 避免在 Visual C++ 2009 上的一个警告。
* Some other minor internal changes to the implementation, tests and
  documentation.\n
  对于实现细节、测试和文档的一些其它细小的内部变化。
* Avoid an unnecessary copy in `operator[]`.\n
  避免在 `operator[]` 中的一个不必要的复制。
* [@https://svn.boost.org/trac/boost/ticket/2975 Ticket 2975]: Fix length of
  prime number list.\n
  [@https://svn.boost.org/trac/boost/ticket/2975 Ticket 2975]: 固定长度的质数表。

[h2 Boost 1.40.0]

* [@https://svn.boost.org/trac/boost/ticket/2975 Ticket 2975]:
  Store the prime list as a preprocessor sequence - so that it will always get
  the length right if it changes again in the future.\n
  [@https://svn.boost.org/trac/boost/ticket/2975 Ticket 2975]:
  将质数表保存为一个预处理器序列 - 这样如果以后再次变更，也总能获得正确的长度。
* [@https://svn.boost.org/trac/boost/ticket/1978 Ticket 1978]:
  Implement `emplace` for all compilers.\n
  [@https://svn.boost.org/trac/boost/ticket/1978 Ticket 1978]: 为所有编译器实现 `emplace`。
* [@https://svn.boost.org/trac/boost/ticket/2908 Ticket 2908],
  [@https://svn.boost.org/trac/boost/ticket/3096 Ticket 3096]:
  Some workarounds for old versions of borland, including adding explicit
  destructors to all containers.\n
  [@https://svn.boost.org/trac/boost/ticket/2908 Ticket 2908],
  [@https://svn.boost.org/trac/boost/ticket/3096 Ticket 3096]:
  针对旧版本的 borland 编译器的一些变通方法，包括为所有容器增加显式析构函数。
* [@https://svn.boost.org/trac/boost/ticket/3082 Ticket 3082]:
  Disable incorrect Visual C++ warnings.\n
  [@https://svn.boost.org/trac/boost/ticket/3082 Ticket 3082]: 禁止不正确的 Visual C++ 警告。
* Better configuration for C++0x features when the headers aren't available.\n
  当头文件不可用时，可更好地配置 C++0x 的特性。
* Create less buckets by default.\n
  缺省情况下创建量少的桶。

[h2 Boost 1.41.0 - Major update 重要更新]

* The original version made heavy use of macros to sidestep some of the older
  compilers' poor template support. But since I no longer support those
  compilers and the macro use was starting to become a maintenance burden it
  has been rewritten to use templates instead of macros for the implementation
  classes.\n
  原先的版本使用了大量宏来解决一些旧编译器对于模板的较差的支持。
  但是由于我们不再支持这些旧编译器，而且这些宏的使用已经开始成为沉重的维护负担，所以我们进行了重写，使用模板代替宏来实现这些类。

* The container objcet is now smaller thanks to using `boost::compressed_pair`
  for EBO and a slightly different function buffer - now using a bool instead
  of a member pointer.\n
  容器对象更小了，归功于对EBO使用了 `boost::compressed_pair` 以及一个稍微不一样的函数缓冲 - 使用一个 `bool` 值来替代成员指针。

* Buckets are allocated lazily which means that constructing an empty container
  will not allocate any memory.\n
  桶的分配被延迟，这意味着构造一个空的容器将不分配任何内存。
  
[h2 Boost 1.42.0]

* Support instantiating the containers with incomplete value types.\n
  支持带不完整值类型的容器的实例化。
* Reduced the number of warnings (mostly in tests).\n
  减少了告警数量(主要是测试中的)。
* Improved codegear compatibility.\n
  提升了 codegear 兼容性。
* [@http://svn.boost.org/trac/boost/ticket/3693 Ticket 3693]:
  Add `erase_return_void` as a temporary workaround for the current
  `erase` which can be inefficient because it has to find the next
  element to return an iterator.\n
  [@http://svn.boost.org/trac/boost/ticket/3693 Ticket 3693]:
  由于当前的 `erase` 必须查找下一元素以返回迭代器，这有可能很低效，所以增加了 `erase_return_void` 作为临时的变通。
* Add templated find overload for compatible keys.\n
  增加了针对兼容键的模板化 find 重载。
* [@http://svn.boost.org/trac/boost/ticket/3773 Ticket 3773]:
  Add missing `std` qualifier to `ptrdiff_t`.\n
  [@http://svn.boost.org/trac/boost/ticket/3773 Ticket 3773]: 为 `ptrdiff_t` 增加漏掉的 `std` 限定。
* Some code formatting changes to fit almost all lines into 80 characters.\n
  修改了一些代码格式以适应所有行长小于80个字符。

[h2 Boost 1.43.0]

* [@http://svn.boost.org/trac/boost/ticket/3966 Ticket 3966]:
  `erase_return_void` is now `quick_erase`, which is the
  [@http://home.roadrunner.com/~hinnant/issue_review/lwg-active.html#579
  current forerunner for resolving the slow erase by iterator], although
  there's a strong possibility that this may change in the future. The old
  method name remains for backwards compatibility but is considered deprecated
  and will be removed in a future release.\n
  [@http://svn.boost.org/trac/boost/ticket/3966 Ticket 3966]:
  `erase_return_void` 现在改为 `quick_erase`，它是 [@http://home.roadrunner.com/~hinnant/issue_review/lwg-active.html#579
  解决使用迭代器进行删除过慢的当前预测版]，不过未来很有可能会有变化。旧的方法名因后向兼容性而被保留，但会在以后版本中被移除。
* Use Boost.Exception.\n
  使用 Boost.Exception.
* Stop using deprecated `BOOST_HAS_*` macros.\n
  停止使用 `BOOST_HAS_*` 宏。

[endsect]
