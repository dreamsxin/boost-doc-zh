[section:erase erase]

[heading Prototype 原型]

``
template<class Container>
Container& erase(
    Container& target,
    iterator_range<typename Container::iterator> to_erase);
``

[heading Description 说明]

`erase` the iterator range `to_erase` from the container `target`.\n
`erase` 从容器 `target` 中删除迭代器区间 `to_erase`。

`remove_erase` performs the frequently used combination equivalent to `target.erase(std::remove(target.begin(), target.end(), value), target.end());`\n
`remove_erase` 执行常用的组合 `target.erase(std::remove(target.begin(), target.end(), value), target.end());`

`remove_erase_if` performs the frequently used combination equivalent to `target.erase(std::remove_if(target.begin(), target.end(), pred), target.end());`\n
`remove_erase_if` 执行常用的组合 `target.erase(std::remove_if(target.begin(), target.end(), pred), target.end());`

[heading Definition 定义]

Defined in the header file `boost/range/algorithm_ext/erase.hpp`\n
定义于头文件 `boost/range/algorithm_ext/erase.hpp` 中

[heading Requirements 要求]

# `Container` supports erase of an iterator range.\n
  `Container` 支持对迭代器区间的删除。

[heading Complexity 复杂度]

Linear. Proprotional to `distance(to_erase)`.\n
线性。正比于 `distance(to_erase)`。

[endsect]
