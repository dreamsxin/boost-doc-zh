[section:remove_if remove_if]

[heading Prototype 原型]

``
template<
    class ForwardRange,
    class UnaryPredicate
    >
typename range_iterator<ForwardRange>::type
remove(ForwardRange& rng, UnaryPredicate pred);

template<
    class ForwardRange,
    class UnaryPredicate
    >
typename range_iterator<const ForwardRange>::type
remove(const ForwardRange& rng, UnaryPredicate pred);

template<
    range_return_value re,
    class ForwardRange,
    class UnaryPredicate
    >
typename range_return<ForwardRange,re>::type
remove(ForwardRange& rng, UnaryPredicate pred);

template<
    range_return_value re,
    class ForwardRange,
    class UnaryPredicate
    >
typename range_return<const ForwardRange,re>::type
remove(const ForwardRange& rng, UnaryPredicate pred);
``

[heading Description 说明]

`remove_if` removes from `rng` all of the elements `x` for which `pred(x)` is `true`. The versions of `remove_if` that return an iterator, return an iterator `new_last` such that the range `[begin(rng), new_last)` contains no elements where `pred(x)` is `true`. The iterators in the range `[new_last, end(rng))` are dereferenceable, but the elements are unspecified.\n
`remove_if` 从 `rng` 中删除所有满足 `pred(x)` 为 `true` 的元素 `x`。返回迭代器的 `remove_if` 版本将返回一个迭代器 `new_last` 
使得区间 `[begin(rng), new_last)` 中没有令 `pred(x)` 为 `true` 的元素。区间 `[new_last, end(rng))` 中的迭代器是可提领的，但其元素不确定。


[heading Definition 定义]

Defined in the header file `boost/range/algorithm/remove_if.hpp`\n
定义于头文件 `boost/range/algorithm/remove_if.hpp` 中

[heading Requirements 要求]

* `ForwardRange` is a model of the __forward_range__ Concept.\n
  `ForwardRange` 符合 __forward_range__ 概念。
* `ForwardRange` is mutable.\n
  `ForwardRange` 可写。
* `UnaryPredicate` is a model of the `PredicateConcept`.\n
  `UnaryPredicate` 符合 `PredicateConcept`.
* `ForwardRange`'s value type is convertible to `UnaryPredicate`'s argument type.\n
  `ForwardRange` 的值类型可转换为 `UnaryPredicate` 的参数类型。

[heading Complexity 复杂度]

Linear. `remove_if` performs exactly `distance(rng)` applications of `pred`.\n
线性。`remove_if` 执行正好 `distance(rng)` 次 `pred` 调用。

[endsect]


