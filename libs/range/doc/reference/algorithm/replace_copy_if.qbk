[section:replace_copy_if replace_copy_if]

[heading Prototype 原型]

``
template<class ForwardRange, class OutputIterator, class UnaryPredicate, class Value>
OutputIterator replace_copy_if(const ForwardRange& rng, OutputIterator out,
                               UnaryPredicate pred, const Value& with_what);
``

[heading Description 说明]

`replace_copy_if` copy every element `x` in `rng` such that the corresponding element in the output range `y` is `pred(x) ? with_what : x`.\n
`replace_copy_if` 复制 `rng` 中的每个元素，令输出区间 `y` 中的对应元素为 `pred(x) ? with_what : x`。

[heading Definition 定义]

Defined in the header file `boost/range/algorithm/replace_copy_if.hpp`\n
定义于头文件 `boost/range/algorithm/replace_copy_if.hpp` 中

[heading Requirements 要求]

* `ForwardRange` is a model of the __forward_range__ Concept.\n
  `ForwardRange` 符合 __forward_range__ 概念。
* `ForwardRange` is mutable.\n
  `ForwardRange` 可写。
* `Value` is convertible to `ForwardRange`'s value type.\n
  `Value` 可转换为 `ForwardRange` 的值类型。
* `Value` is a model of the `AssignableConcept`.\n
  `Value` 符合 `AssignableConcept`.
* `OutputIterator` is a model of the `OutputIteratorConcept`.\n
  `OutputIterator` 符合 `OutputIteratorConcept`.
* `UnaryPredicate` is a model of the `UnaryPredicateConcept`.\n
  `UnaryPredicate` 符合 `UnaryPredicateConcept`.

[heading Complexity 复杂度]

Linear. `replace_copy_if` performs exactly `distance(rng)` evaluations of `pred`.\n
线性。`replace_copy_if` 正好执行 `distance(rng)` 次 `pred` 求值。

[endsect]


