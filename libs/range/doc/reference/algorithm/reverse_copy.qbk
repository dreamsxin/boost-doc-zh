[section:reverse_copy reverse_copy]

[heading Prototype 原型]

``
template<class BidirectionalRange, class OutputIterator>
OutputIterator reverse_copy(const BidirectionalRange& rng, OutputIterator out);
``

[heading Description 说明]

`reverse_copy` copies the elements from `rng` in reverse order to `out`.
Returns the output iterator one passed the last copied element.\n
`reverse_copy` 以相反顺序将 `rng` 中的元素复制至 `out`。返回指向最后被复制元素之后的输出迭代器。

[heading Definition 定义]

Defined in the header file `boost/range/algorithm/reverse_copy.hpp`\n
定义于头文件 `boost/range/algorithm/reverse_copy.hpp` 中

[heading Requirements 要求]

* `BidirectionalRange` is a model of the __bidirectional_range__ Concept.\n
  `BidirectionalRange` 符合 __bidirectional_range__ 概念。
* `BidirectionalRange` is mutable.\n
  `BidirectionalRange` 可写。
* `OutputIterator` is a model of the `OutputIteratorConcept`.\n
  `OutputIterator` 符合 `OutputIteratorConcept`.

[heading Complexity 复杂]

Linear. `reverse_copy` makes `distance(rng)` copies.\n
线性。`reverse_copy` 执行 `distance(rng)` 次复制。

[endsect]


