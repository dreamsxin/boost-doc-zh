[section:sort_heap sort_heap]

[heading Prototype 原型]

``
template<class RandomAccessRange>
RandomAccessRange& sort_heap(RandomAccessRange& rng);

template<class RandomAccessRange>
const RandomAccessRange& sort_heap(const RandomAccessRange& rng);

template<class RandomAccessRange, class Compare>
RandomAccessRange& sort_heap(RandomAccessRange& rng, Compare pred);

template<class RandomAccessRange, class Compare>
const RandomAccessRange& sort_heap(const RandomAccessRange& rng, Compare pred);
``

[heading Description 说明]

`sort_heap` turns a heap into a sorted range.\n
`sort_heap` 将一个堆变为排好序的区间。

The ordering relationship is determined by using `operator<` in the non-predicate versions, and by evaluating `pred` in the predicate versions.\n
在不带谓词的版本中，顺序关系由 `operator<` 决定，在带谓词的版本中则通过对 `pred` 求值来决定。

[heading Definition 定义]

Defined in the header file `boost/range/algorithm/heap_algorithm.hpp`\n
定义于头文件 `boost/range/algorithm/heap_algorithm.hpp` 中

[heading Requirements 要求]

[*For the non-predicate versions: 对于不带谓词的版本：]

* `RandomAccessRange` is a model of the __random_access_range__ Concept.\n
  `RandomAccessRange` 符合 __random_access_range__ 概念。
* `RandomAccessRange` is mutable.\n
  `RandomAccessRange` 可写。
* `RandomAccessRange`'s value type is a model of the `LessThanComparableConcept`.\n
  `RandomAccessRange` 的值类型符合 `LessThanComparableConcept`.
* The ordering of objects of type `RandomAccessRange`'s value type is a [*/strict weak ordering/], as defined in the `LessThanComparableConcept` requirements.\n
  `RandomAccessRange` 值类型的对象的顺序是一个 [*/严格弱序/]，正如 `LessThanComparableConcept` 的要求所定义的。

[*For the predicate versions: 对于带谓词的版本：]

* `RandomAccessRange` is a model of the __random_access_range__ Concept.\n
  `RandomAccessRange` 符合 __random_access_range__ 概念。
* `RandomAccessRange` is mutable.\n
  `RandomAccessRange` 可写。
* `Compare` is a model of the `StrictWeakOrderingConcept`.\n
  `Compare` 符合 `StrictWeakOrderingConcept`.
* `RandomAccessRange`'s value type is convertible to both of `Compare`'s argument types.\n
  `RandomAccessRange` 的值类型可转换为 `Compare` 的两个参数类型。

[heading Precondition: 前提条件：]

`rng` is a heap.\n
`rng` 是一个堆。

[heading Complexity 复杂度]

At most `N * log(N)` comparisons, where `N` is `distance(rng)`.\n
最多 `N * log(N)` 次比较，其中 `N` 为 `distance(rng)`.

[endsect]


