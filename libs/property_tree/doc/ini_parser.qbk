[/
 / Copyright (c) 2008 Marcin Kalicinski (kalita <at> poczta dot onet dot pl)
 / Copyright (c) 2009 Sebastian Redl (sebastian dot redl <at> getdesigned dot at)
 /
 / Distributed under the Boost Software License, Version 1.0. (See accompanying
 / file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
 /]
[section INI Parser  INI分析器]
[def __ini__ [@http://en.wikipedia.org/wiki/INI INI format]]
The __ini__ was once widely used in the world of Windows. It is now deprecated,
but is still used by a surprisingly large number of applications. The reason is
probably its simplicity, plus that Microsoft recommends using the registry as
a replacement, which not all developers want to do.

__ini__ 曾经在Windows世界中被广泛使用。现在已经不建议使用，但仍然被大量应用程序使用。
原因可能是由于它的简单性，加上Microsoft建议使用registry作为替代，但不是所有开发都愿意。

INI is a simple key-value format with a single level of sectioning. It is thus
less rich than the property tree dataset, which means that not all property
trees can be serialized as INI files.

INI 是一种简单的键-值格式，只有section一个层级。因此，它不如属性树数据集，
这意味着不是所有属性树都可以序列化为INI文件。

The INI parser creates a tree node for every section, and a child node for
every property in that section. All properties not in a section are directly
added to the root node. Empty sections are ignored. (They don't round-trip, as
described below.)

INI分析器为每个section创建一个树节点，section中的每个属性成为一个子节点。
所有不在section中的属性被直接添加至根节点。空的section被略过。
(它不是可循环的，如后所述)。

The INI serializer reverses this process. It first writes out every child of the
root that contains data, but no child nodes, as properties. Then it creates a
section for every child that contains child nodes, but no data. The children of
the sections must only contain data. It is an error if the root node contains
data, or any child of the root contains both data and content, or there's more
than three levels of hierarchy. There must also not be any duplicate keys.

INI序列化器则将此过程逆转。它首先写出根的每个带有数据而没有子节点的子节点，作为属性。
然后为每个带有子节点而没有数据的子节点创建一个section。section的子节点则只能包含数据。
如果根节点包含数据，或者根的子节点同时包含数据和内容，或者超过三层，则为错误。
此外，还必须没有重复的键。

An empty tree node is assumed to be an empty property. There is no way to create
empty sections.

空的树节点被假定为一个空的属性。没有办法创建一个空的section。

Since the Windows INI parser discards trailing spaces and does not support
quoting, the property tree parser follows this example. This means that
property values containing trailing spaces do not round-trip.

由于Windows INI分析器忽略后随空格，且不支持引号，所以属性树分析器也遵循此例。
这意味着包含后随空格的属性值将不能完全恢复。
[endsect] [/ini_parser]
